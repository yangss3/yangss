import{_ as s,c as n,o as a,a as e}from"./app.144f2fe4.js";const x='{"title":"\u6B63\u5219\u8868\u8FBE\u5F0F","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6355\u83B7\u7EC4","slug":"\u6355\u83B7\u7EC4"},{"level":2,"title":"\u65AD\u8A00","slug":"\u65AD\u8A00"},{"level":2,"title":"\u5339\u914D\u4E2D\u6587\u5B57\u7B26","slug":"\u5339\u914D\u4E2D\u6587\u5B57\u7B26"}],"relativePath":"notes/regexp.md"}',p={},t=e(`<h1 id="\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1">\u6B63\u5219\u8868\u8FBE\u5F0F <a class="header-anchor" href="#\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a></h1><h2 id="\u6355\u83B7\u7EC4" tabindex="-1">\u6355\u83B7\u7EC4 <a class="header-anchor" href="#\u6355\u83B7\u7EC4" aria-hidden="true">#</a></h2><ul><li><strong>\u6355\u83B7\u7EC4</strong> <code>(xyz)</code> \u548C <code>\\n</code>\uFF1A<code>(xyz)</code> \u5339\u914D <code>&#39;xyz&#39;</code> \u5E76\u4E14\u4F1A\u8BB0\u4F4F\u8FD9\u4E2A\u5339\u914D\uFF0C\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u53EF\u4EE5\u5305\u542B\u591A\u4E2A\u6355\u83B7\u7EC4\uFF0C\u53EF\u4EE5\u5728\u540E\u9762\u901A\u8FC7 <code>\\n</code> \u6765\u5F15\u7528\u5BF9\u5E94\u7684\u6355\u83B7\u7EC4\uFF0C\u5176\u4E2D <code>n</code> \u4EE3\u8868\u6355\u83B7\u7EC4\u51FA\u73B0\u7684\u987A\u5E8F\uFF0C\u4F8B\u5982 <code>\\1</code> \u4EE3\u8868\u5F15\u7528\u7B2C\u4E00\u4E2A\u6355\u83B7\u7EC4\uFF1A<div class="language-js"><pre><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">My favorite fruit is (apple), I eat \\d+ \\1s? a day</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;My favorite fruit is apple, I eat 3 apples a day&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// [&#39;My favorite fruit is apple, I eat 3 apples a day&#39;, &#39;apple&#39;, index: 0, input: &#39;My favorite fruit is apple, I eat 3 apples a day&#39;, groups: undefined]</span>
</code></pre></div></li><li><strong>\u547D\u540D\u7684\u6355\u83B7\u7EC4</strong> <code>(?&lt;name&gt;xyz)</code> \u548C <code>\\k&lt;name&gt;</code>\uFF1A\u901A\u8FC7 <code>?&lt;name&gt;</code> \u6807\u8BB0\u7ED9\u6355\u83B7\u7EC4\u547D\u540D\u3002\u547D\u540D\u7684\u6355\u83B7\u7EC4\u53EF\u4EE5\u901A\u8FC7 <code>\\k&lt;name&gt;</code> \u7684\u65B9\u5F0F\u5F15\u7528\uFF0C\u800C\u4E14\u5728\u5339\u914D\u7ED3\u679C\u4E2D\uFF0C\u547D\u540D\u7684\u6355\u83B7\u7EC4\u7684\u5339\u914D\u7ED3\u679C\u4F1A\u51FA\u73B0\u5728 <code>groups</code> \u5B57\u6BB5\u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7 <code>res.groups.[name]</code> \u6765\u8BBF\u95EE\uFF1A<div class="language-js"><pre><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">My favorite fruit is (?&lt;fruit&gt;apple), I eat \\d+ \\k&lt;fruit&gt;s? a day</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;My favorite fruit is apple, I eat 3 apples a day&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// [&#39;My favorite fruit is apple, I eat 3 apples a day&#39;, &#39;apple&#39;, index: 0, input: &#39;My favorite fruit is apple, I eat 3 apples a day&#39;, groups: {fruit: &#39;apple&#39;}]</span>
</code></pre></div></li><li><strong>\u975E\u6355\u83B7\u7EC4</strong> <code>(?:xyz)</code>\uFF1A\u5339\u914D <code>&#39;xyz&#39;</code>\uFF0C\u4F46\u662F\u7ED3\u679C\u4E0D\u4F1A\u8BB0\u4F4F\u8FD9\u4E2A\u5339\u914D\u7EC4\uFF0C\u5373\u4ECE\u5339\u914D\u7ED3\u679C\u91CC\u83B7\u53D6\u4E0D\u5230\u5339\u914D\u7684\u5B50\u4E32\u3002\u5982\u679C\u6211\u4EEC\u53EA\u9700\u8981\u5BF9\u5339\u914D\u8FDB\u884C\u5206\u7EC4\uFF0C\u800C\u4E0D\u9700\u8981\u8BB0\u4F4F\u8FD9\u4E2A\u5206\u7EC4\u65F6\uFF0C\u53EF\u4EE5\u7ED9\u5206\u7EC4\u6DFB\u52A0 <code>?:</code> \u6807\u8BB0\uFF0C\u8FD9\u6837\u6027\u80FD\u4F1A\u66F4\u597D\uFF1A<div class="language-js"><pre><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">My favorite fruit is (?:apple|pineapple)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;My favorite fruit is apple&#39;</span><span class="token punctuation">)</span>
 <span class="token comment">// [&#39;My favorite fruit is apple&#39;, index: 0, input: &#39;My favorite fruit is apple&#39;, groups: undefined]</span>
</code></pre></div></li></ul><h2 id="\u65AD\u8A00" tabindex="-1">\u65AD\u8A00 <a class="header-anchor" href="#\u65AD\u8A00" aria-hidden="true">#</a></h2><ul><li><strong>\u5411\u524D\u80AF\u5B9A\u65AD\u8A00</strong> <code>x(?=y)</code>\uFF1A\u5339\u914D <code>&#39;x&#39;</code> \u5F53\u4E14\u4EC5\u5F53 <code>&#39;x&#39; \u540E\u9762\u7D27\u8DDF\u7740 &#39;y&#39;</code><div class="language-js"><pre><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Nicholas(?=Yang)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;NicholasYang&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// [&#39;Nicholas&#39;, index: 0, input: &#39;NicholasYang&#39;, groups: undefined]</span>

<span class="token operator">/</span><span class="token function">Nicholas</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">=</span>Yang<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;Nicholas123&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// null</span>
</code></pre></div></li><li><strong>\u5411\u524D\u5426\u5B9A\u65AD\u8A00</strong> <code>x(?!y)</code>\uFF1A\u5339\u914D <code>&#39;x&#39;</code> \u5F53\u4E14\u4EC5\u5F53 <code>&#39;x&#39; \u540E\u9762\u4E0D\u662F\u7D27\u8DDF\u7740 &#39;y&#39;</code><div class="language-js"><pre><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+(?!\\.)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;3.14&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// [&#39;14&#39;, index: 2, input: &#39;3.14&#39;, groups: undefined]</span>
<span class="token comment">// \u5339\u914D &#39;14&#39; \u800C\u4E0D\u662F &#39;3&#39;</span>
</code></pre></div></li><li><strong>\u5411\u540E\u80AF\u5B9A\u65AD\u8A00</strong> <code>(?&lt;=y)x</code>\uFF1A\u5339\u914D <code>&#39;x&#39;</code> \u5F53\u4E14\u4EC5\u5F53 <code>&#39;x&#39; \u524D\u9762\u662F &#39;y&#39;</code><div class="language-js"><pre><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;=Nicholas)Yang</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;NicholasYang&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// [&#39;Yang&#39;, index: 8, input: &#39;NicholasYang&#39;, groups: undefined]</span>
</code></pre></div></li><li><strong>\u5411\u540E\u5426\u5B9A\u65AD\u8A00</strong> <code>(?&lt;!y)x</code>\uFF1A\u5339\u914D <code>&#39;x&#39;</code> \u5F53\u4E14\u4EC5\u5F53 <code>&#39;x&#39; \u524D\u9762\u4E0D\u662F &#39;y&#39;</code><div class="language-js"><pre><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;!-)\\d+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span> <span class="token comment">// match</span>
<span class="token operator">/</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">-</span><span class="token punctuation">)</span>\\d<span class="token operator">+</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;-3&#39;</span><span class="token punctuation">)</span> <span class="token comment">// not match</span>
</code></pre></div></li></ul><h2 id="\u5339\u914D\u4E2D\u6587\u5B57\u7B26" tabindex="-1">\u5339\u914D\u4E2D\u6587\u5B57\u7B26 <a class="header-anchor" href="#\u5339\u914D\u4E2D\u6587\u5B57\u7B26" aria-hidden="true">#</a></h2><p>\u5F53\u9700\u8981\u5339\u914D\u4E2D\u6587\u5B57\u7B26\u65F6\uFF0C\u4F60\u901A\u8FC7\u767E\u5EA6\u5F88\u5FEB\u5C31\u80FD\u627E\u5230\u8FD9\u6BB5\u6B63\u5219\u8868\u8FBE\u5F0F\uFF1A</p><div class="language-js"><pre><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\u4E00-\\u9FCC\\u3400-\\u4DB5\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\ud840-\\ud868][\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|[\\ud86a-\\ud86c][\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d]</span><span class="token regex-delimiter">/</span></span>
</code></pre></div><p>\u8FD9\u6837\u505A\u6CA1\u95EE\u9898\uFF0C\u4F46\u662F\u770B\u8D77\u6765\u5F88\u4E0D\u4F18\u96C5\u3002\u8FD8\u6709\u4E00\u79CD\u66F4\u7B80\u6D01\u7684\u529E\u6CD5\uFF0C\u5373 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Unicode_Property_Escapes" target="_blank" rel="noopener noreferrer">unicode property escapes</a>\uFF0C\u57FA\u4E8E\u5B57\u7B26\u7684 unicode \u8FDB\u884C\u5339\u914D\uFF0C\u9700\u8981\u914D\u5408 <code>u</code> \u4FEE\u9970\u7B26\u4F7F\u7528\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">const</span> chineseCharRegex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\p{Script=Han}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">u</span></span> <span class="token comment">// Script \u53EF\u4EE5\u7B80\u5199\u4E3A sc</span>
chineseCharRegex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F60\u597D&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre></div>`,10),o=[t];function c(l,r,i,d,u,g){return a(),n("div",null,o)}var f=s(p,[["render",c]]);export{x as __pageData,f as default};
