import{_ as n,c as s,o as a,a as p}from"./app.ace6221f.js";const y='{"title":"TypeScript \u7B14\u8BB0","description":"","frontmatter":{},"headers":[{"level":2,"title":"Functions","slug":"functions"},{"level":3,"title":"Function Types (\u51FD\u6570\u7C7B\u578B)","slug":"function-types-\u51FD\u6570\u7C7B\u578B"},{"level":3,"title":"Inferring the types (\u7C7B\u578B\u63A8\u65AD)","slug":"inferring-the-types-\u7C7B\u578B\u63A8\u65AD"},{"level":3,"title":"Optional and Default Parameters (\u53EF\u9009\u548C\u9ED8\u8BA4\u53C2\u6570)","slug":"optional-and-default-parameters-\u53EF\u9009\u548C\u9ED8\u8BA4\u53C2\u6570"},{"level":3,"title":"Rest Parameters","slug":"rest-parameters"},{"level":3,"title":"this","slug":"this"},{"level":3,"title":"Overloads (\u91CD\u8F7D)","slug":"overloads-\u91CD\u8F7D"},{"level":2,"title":"Interfaces","slug":"interfaces"},{"level":3,"title":"Optional Properties","slug":"optional-properties"},{"level":3,"title":"Readonly Properties","slug":"readonly-properties"},{"level":3,"title":"Excess Property Checks","slug":"excess-property-checks"},{"level":3,"title":"Function Types","slug":"function-types"},{"level":3,"title":"Indexable Types","slug":"indexable-types"},{"level":3,"title":"Class Types","slug":"class-types"},{"level":3,"title":"Extending Interfaces","slug":"extending-interfaces"},{"level":3,"title":"Hybrid Types","slug":"hybrid-types"},{"level":3,"title":"Interfaces Extending Classes","slug":"interfaces-extending-classes"},{"level":2,"title":"Classes","slug":"classes"},{"level":3,"title":"Public by default","slug":"public-by-default"},{"level":3,"title":"Understanding private","slug":"understanding-private"},{"level":3,"title":"Understanding protected","slug":"understanding-protected"},{"level":3,"title":"Readonly modifier","slug":"readonly-modifier"},{"level":3,"title":"Parameter Properties","slug":"parameter-properties"},{"level":3,"title":"Accessors","slug":"accessors"},{"level":3,"title":"Static Properties","slug":"static-properties"},{"level":3,"title":"Abstract Classes","slug":"abstract-classes"},{"level":3,"title":"Using a class as an interface","slug":"using-a-class-as-an-interface"},{"level":2,"title":"Generics","slug":"generics"},{"level":3,"title":"Generic Types","slug":"generic-types"},{"level":3,"title":"Generic Classes","slug":"generic-classes"},{"level":3,"title":"Generic Constraints","slug":"generic-constraints"},{"level":2,"title":"Enums","slug":"enums"},{"level":3,"title":"Numeric enums","slug":"numeric-enums"},{"level":3,"title":"String enums","slug":"string-enums"},{"level":3,"title":"Heterogeneous enums","slug":"heterogeneous-enums"},{"level":3,"title":"Computed and constant members","slug":"computed-and-constant-members"},{"level":3,"title":"","slug":"union-enums-and-enum-member-types"},{"level":3,"title":"enums at runtime","slug":"enums-at-runtime"},{"level":3,"title":"Reverse mappings","slug":"reverse-mappings"},{"level":3,"title":"enums","slug":"const-enums"},{"level":3,"title":"Ambient enums","slug":"ambient-enums"},{"level":2,"title":"Type Inference","slug":"type-inference"},{"level":3,"title":"Basic","slug":"basic"},{"level":3,"title":"Best common type","slug":"best-common-type"},{"level":3,"title":"Contextual Typing","slug":"contextual-typing"},{"level":2,"title":"Type Compatibility","slug":"type-compatibility"},{"level":3,"title":"Introduction","slug":"introduction"},{"level":3,"title":"Functions","slug":"functions-1"},{"level":3,"title":"Enums","slug":"enums-1"},{"level":3,"title":"Classes","slug":"classes-1"},{"level":3,"title":"Generics","slug":"generics-1"},{"level":2,"title":"Advanced Types","slug":"advanced-types"},{"level":3,"title":"Intersection Types (\u4EA4\u53C9\u7C7B\u578B)","slug":"intersection-types-\u4EA4\u53C9\u7C7B\u578B"},{"level":3,"title":"Union Types (\u8054\u5408\u7C7B\u578B)","slug":"union-types-\u8054\u5408\u7C7B\u578B"},{"level":3,"title":"Type Guards and Differentiating Types","slug":"type-guards-and-differentiating-types"},{"level":3,"title":"Nullable Types","slug":"nullable-types"},{"level":3,"title":"Type Aliases (\u7C7B\u578B\u522B\u540D)","slug":"type-aliases-\u7C7B\u578B\u522B\u540D"},{"level":3,"title":"String Literal Types","slug":"string-literal-types"},{"level":3,"title":"Numeric Literal Types","slug":"numeric-literal-types"},{"level":3,"title":"Enum Member Types","slug":"enum-member-types"},{"level":3,"title":"Discriminated Unions","slug":"discriminated-unions"},{"level":3,"title":"Polymorphic  types (\u591A\u6001\u7684 this \u7C7B\u578B)","slug":"polymorphic-this-types-\u591A\u6001\u7684-this-\u7C7B\u578B"},{"level":3,"title":"Index types","slug":"index-types"},{"level":3,"title":"Mapped types","slug":"mapped-types"},{"level":3,"title":"Conditional Types","slug":"conditional-types"},{"level":2,"title":"Modules","slug":"modules"},{"level":3,"title":"Export","slug":"export"},{"level":3,"title":"Import","slug":"import"},{"level":3,"title":"Default exports","slug":"default-exports"},{"level":3,"title":"export = and import = require()","slug":"export-and-import-require"}],"relativePath":"notes/typescript.md"}',t={},o=p(`<h1 id="typescript-\u7B14\u8BB0" tabindex="-1">TypeScript \u7B14\u8BB0 <a class="header-anchor" href="#typescript-\u7B14\u8BB0" aria-hidden="true">#</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-hidden="true">#</a></h2><h3 id="function-types-\u51FD\u6570\u7C7B\u578B" tabindex="-1">Function Types (\u51FD\u6570\u7C7B\u578B) <a class="header-anchor" href="#function-types-\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a></h3><div class="language-ts"><pre><code><span class="token comment">// Named function</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>

<span class="token comment">// Anonymous function</span>
<span class="token keyword">let</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>
</code></pre></div><p>TypeScript \u80FD\u591F\u6839\u636E\u51FD\u6570\u7684 return statement \u63A8\u65AD\u51FA\u51FD\u6570\u7684\u8FD4\u56DE\u7C7B\u578B\uFF0C\u56E0\u6B64\u5F88\u591A\u65F6\u5019\u5728\u5B9A\u4E49\u51FD\u6570\u65F6\u53EF\u4EE5\u7701\u7565\u6389 return type\u3002</p><p><strong>\u51FD\u6570\u7C7B\u578B</strong>\u5206\u4E3A\u4E24\u90E8\u5206\uFF1A\u53C2\u6570\u7C7B\u578B\u548C\u8FD4\u56DE\u7C7B\u578B\u3002\u5728\u5199<strong>\u51FD\u6570\u7C7B\u578B</strong>\u65F6\uFF0C\u53C2\u6570\u7C7B\u578B\u548C\u8FD4\u56DE\u7C7B\u578B\u90FD\u5FC5\u987B\u5199\u5168\uFF0C\u4E0D\u80FD\u7701\u7565\uFF0C\u5373\u4F7F\u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u4E5F\u8981\u7528 <code>void</code> \u6765\u6307\u5B9A\u8FD4\u56DE\u7C7B\u578B\uFF0C\u8FD4\u56DE\u7C7B\u578B\u4E0E\u53C2\u6570\u5217\u8868\u4E4B\u95F4\u4F7F\u7528 <code>=&gt;</code> \u5206\u9694\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function-variable function">number</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>

<span class="token comment">// \u82E5\u7701\u7565\u6389 void \u5C06\u5BFC\u81F4\u7F16\u8BD1\u9519\u8BEF</span>
<span class="token keyword">let</span> <span class="token function-variable function">sayHi</span><span class="token operator">:</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function-variable function">void</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hi, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="inferring-the-types-\u7C7B\u578B\u63A8\u65AD" tabindex="-1">Inferring the types (\u7C7B\u578B\u63A8\u65AD) <a class="header-anchor" href="#inferring-the-types-\u7C7B\u578B\u63A8\u65AD" aria-hidden="true">#</a></h3><p>TypeScript \u7F16\u8BD1\u5668\u80FD\u591F\u6839\u636E\u8D4B\u503C\u8BED\u53E5\u4E00\u8FB9\u7684\u7C7B\u578B\u63A8\u65AD\u51FA\u53E6\u4E00\u8FB9\u7684\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// myAdd \u88AB\u63A8\u65AD\u51FA\u7684\u51FD\u6570\u7C7B\u578B\uFF1A(x: number, y: number) =&gt; number</span>
<span class="token keyword">let</span> <span class="token function-variable function">myAdd</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">+</span> y <span class="token punctuation">}</span>
<span class="token comment">//  \u53C2\u6570 x, y \u88AB\u63A8\u65AD\u51FA\u5177\u6709 number \u7C7B\u578B</span>
<span class="token keyword">let</span> <span class="token function-variable function">myAdd</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function-variable function">number</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">+</span> y <span class="token punctuation">}</span>
</code></pre></div><h3 id="optional-and-default-parameters-\u53EF\u9009\u548C\u9ED8\u8BA4\u53C2\u6570" tabindex="-1">Optional and Default Parameters (\u53EF\u9009\u548C\u9ED8\u8BA4\u53C2\u6570) <a class="header-anchor" href="#optional-and-default-parameters-\u53EF\u9009\u548C\u9ED8\u8BA4\u53C2\u6570" aria-hidden="true">#</a></h3><p>TypeScript \u4E2D\uFF0C \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u51FD\u6570\u5B9A\u4E49\u65F6\u7684\u53C2\u6570\u5217\u8868\u4E2D\u7684\u6BCF\u4E00\u4E2A\u53C2\u6570\u90FD\u662F\u5FC5\u987B\u7684\uFF0C\u5728\u51FD\u6570\u8C03\u7528\u65F6\u90FD\u4E0D\u80FD\u7701\u7565\uFF0C\u5426\u5219\u7F16\u8BD1\u51FA\u9519\u3002\u4F46\u662F\u4E5F\u53EF\u4EE5\u901A\u8FC7\u5728\u53C2\u6570\u540D\u540E\u9762\u6DFB\u52A0 <code>?</code> \u7B26\u53F7\u6765\u5C06\u5176\u6307\u5B9A\u4E3A\u53EF\u9009\u53C2\u6570\uFF0C\u6CE8\u610F\u53EF\u9009\u53C2\u6570\u7684\u53F3\u8FB9\u4E0D\u80FD\u6709\u5FC5\u987B\u53C2\u6570\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u5982\u679C\u4E0D\u63D0\u4F9B lastName, lastName \u5C06\u4E3A undefined</span>
<span class="token keyword">function</span> <span class="token function">makeName</span><span class="token punctuation">(</span>firstName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> lastName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>lastName<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token keyword">else</span>
    <span class="token keyword">return</span> firstName
<span class="token punctuation">}</span>

<span class="token function">makeName</span><span class="token punctuation">(</span><span class="token string">&#39;Nicholas&#39;</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
</code></pre></div><p>\u4E5F\u53EF\u4EE5\u5728\u51FD\u6570\u5B9A\u4E49\u65F6\u7ED9\u53C2\u6570\u8BBE\u7F6E\u9ED8\u8BA4\u503C\uFF0C\u5982\u679C\u9ED8\u8BA4\u521D\u59CB\u5316\u53C2\u6570\u5728\u53C2\u6570\u5217\u8868\u7684\u672B\u5C3E\uFF0C\u5219\u540C\u53EF\u9009\u53C2\u6570\u4E00\u6837\uFF0C\u53EF\u4EE5\u5728\u8C03\u7528\u65F6\u7701\u7565:</p><div class="language-ts"><pre><code><span class="token comment">// \u4E0E\u4E0A\u9762\u7684\u51FD\u6570\u5171\u4EAB\u51FD\u6570\u7C7B\u578B\uFF1A(fn: string, ln?: string) =&gt; string</span>
<span class="token keyword">function</span> <span class="token function">makeName</span><span class="token punctuation">(</span>firstName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> lastName <span class="token operator">=</span> <span class="token string">&#39;Yang&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

<span class="token function">makeName</span><span class="token punctuation">(</span><span class="token string">&#39;Nicholas&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Nicholas Yang</span>
<span class="token function">makeName</span><span class="token punctuation">(</span><span class="token string">&#39;Nicholas&#39;</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>  <span class="token comment">// Nicholas Yang</span>
<span class="token function">makeName</span><span class="token punctuation">(</span><span class="token string">&#39;Nicholas&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// Nicholas John</span>
</code></pre></div><p>\u4E0E\u53EF\u9009\u53C2\u6570\u4E0D\u540C\uFF0C\u9ED8\u8BA4\u521D\u59CB\u5316\u53C2\u6570\u53EF\u4EE5\u51FA\u73B0\u5728\u5FC5\u987B\u53C2\u6570\u4E4B\u524D\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\u8C03\u7528\u65F6\u4E0D\u80FD\u7701\u7565\u8BE5\u53C2\u6570\uFF0C\u5982\u679C\u8981\u83B7\u53D6\u8BE5\u53C2\u6570\u7684\u9ED8\u8BA4\u503C\uFF0C\u9700\u8981\u663E\u793A\u4F20\u9012 <code>undefined</code>\u3002</p><h3 id="rest-parameters" tabindex="-1">Rest Parameters <a class="header-anchor" href="#rest-parameters" aria-hidden="true">#</a></h3><p>\u5728 TypeScript \u4E2D\uFF0C\u53EF\u4EE5\u7528\u4E00\u4E2A rest parameter \u6765\u6536\u96C6\u53C2\u6570\u5217\u8868\u4E2D\u672A\u6307\u5B9A\u7684\u6240\u6709\u4F20\u9012\u8FC7\u6765\u7684\u53C2\u6570\u503C\uFF0Crest parameter \u4F7F\u7528\u7701\u7565\u53F7 <code>...</code> \u6765\u6307\u793A\uFF0C\u7F16\u8BD1\u5668\u4F1A\u6784\u5EFA\u4E00\u4E2A\u4E0E rest parameter \u540C\u540D\u7684\u6570\u7EC4\u5728\u51FD\u6570\u5185\u90E8\u4F7F\u7528\u3002rest parameter \u53EF\u4EE5\u770B\u4F5C\u662F\u65E0\u7A77\u6570\u91CF\u7684 optional parameter\uFF0C\u5F53 rest parameter \u6CA1\u6709\u63A5\u6536\u5230\u4EFB\u4F55\u503C\u65F6\uFF0C\u540C\u540D\u6570\u7EC4\u5C06\u4E3A\u7A7A\u6570\u7EC4\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// getNameStr \u7684 function type \u4E3A\uFF1A(name: string, ...rest: string[]) =&gt; string</span>
<span class="token keyword">function</span> <span class="token function">getNameStr</span><span class="token punctuation">(</span>name1<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token operator">...</span>restOfNames<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>restOfNames<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> nameStr <span class="token operator">=</span> <span class="token function">getNameStr</span><span class="token punctuation">(</span><span class="token string">&#39;Monica&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Rose&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Joey&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Rachael&#39;</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="this" tabindex="-1">this <a class="header-anchor" href="#this" aria-hidden="true">#</a></h3><p>\u5173\u4E8E <code>this</code> \u5728 TypeScript \u4E2D\u7684\u7528\u6CD5, \u4EE5\u53CA\u5982\u4F55\u8BA9\u7F16\u8BD1\u5668\u6355\u83B7\u7531\u4E8E\u4E0D\u6B63\u786E\u4F7F\u7528 <code>this</code> \u5F15\u53D1\u7684\u9519\u8BEF\uFF0C\u8BF7\u79FB\u6B65<a href="http://www.typescriptlang.org/docs/handbook/functions.html" target="_blank" rel="noopener noreferrer">\u5B98\u65B9\u6587\u6863</a>\u3002</p><h3 id="overloads-\u91CD\u8F7D" tabindex="-1">Overloads (\u91CD\u8F7D) <a class="header-anchor" href="#overloads-\u91CD\u8F7D" aria-hidden="true">#</a></h3><p>\u6240\u8C13 overload \u5C31\u662F\u4E00\u4E2A\u51FD\u6570\u5728\u8C03\u7528\u65F6\uFF0C\u6839\u636E\u4F20\u9012\u7684\u53C2\u6570\u7684 shape (\u6570\u91CF\u4EE5\u53CA\u7C7B\u578B) \u4E0D\u540C\uFF0C\u51FD\u6570\u8868\u73B0\u51FA\u4E0D\u540C\u7684\u884C\u4E3A\u3002 \u90A3\u4E48 TypeScript \u5982\u4F55\u5BF9\u8FD9\u6837\u4E00\u7C7B\u51FD\u6570\u8FDB\u884C\u7C7B\u578B\u68C0\u67E5\u5462\uFF1F\u7B54\u6848\u5C31\u662F\uFF0C\u4E3A\u8FD9\u6837\u7684\u51FD\u6570\u63D0\u4F9B\u591A\u4E2A function type \u6765\u4F5C\u4E3A\u5B83\u7684\u4E00\u4E2A\u91CD\u8F7D\u5217\u8868\uFF0C\u5728\u8BE5\u51FD\u6570\u88AB\u8C03\u7528\u65F6\uFF0C\u7F16\u8BD1\u5668\u4F1A\u4F7F\u7528\u8FD9\u4E2A\u91CD\u8F7D\u5217\u8868\u53BB\u8FDB\u884C\u7C7B\u578B\u68C0\u67E5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">function</span> <span class="token function">pickColor</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token keyword">function</span> <span class="token function">pickColor</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token keyword">function</span> <span class="token function">pickColor</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> colors<span class="token punctuation">[</span>x<span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> colors<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">pickColor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment">// &#39;blue&#39;</span>
<span class="token function">pickColor</span><span class="token punctuation">(</span><span class="token string">&#39;green&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 2</span>
</code></pre></div><p>\u6CE8\u610F\u4E0A\u9762\u4F8B\u5B50\u4E2D\u7684 <code>function pickColor(x: any)</code> \u7247\u6BB5\u4E0D\u662F\u91CD\u8F7D\u5217\u8868\u7684\u4E00\u90E8\u5206\uFF0C <code>pickColor</code> \u51FD\u6570\u53EA\u6709\u4E24\u4E2A\u91CD\u8F7D\uFF0C\u4E00\u4E2A\u63A5\u53D7\u4E00\u4E2A <code>number</code> \u53C2\u6570\uFF0C\u53E6\u4E00\u4E2A\u63A5\u53D7\u4E00\u4E2A <code>string</code> \u53C2\u6570\uFF0C \u4F7F\u7528\u4EFB\u4F55\u5176\u5B83\u53C2\u6570\u7C7B\u578B\u8C03\u7528\u8BE5\u51FD\u6570\u5C06\u5BFC\u81F4\u9519\u8BEF\u3002</p><h2 id="interfaces" tabindex="-1"><a href="http://www.typescriptlang.org/docs/handbook/interfaces.html" target="_blank" rel="noopener noreferrer">Interfaces</a> <a class="header-anchor" href="#interfaces" aria-hidden="true">#</a></h2><p>\u57FA\u4E8E<strong>\u503C\u7684\u5F62\u72B6</strong>(the shape of values) \u7684\u7C7B\u578B\u68C0\u67E5(type-checking) \u662F TypeScript \u7684\u4E00\u4E2A\u6838\u5FC3\u6982\u5FF5\uFF0C\u800C interface \u7528\u6765\u4E3A\u8FD9\u4E9B\u7C7B\u578B(\u5F62\u72B6)\u540D\u547D\uFF0C\u53EF\u4EE5\u628A interface \u5F53\u4F5C\u662F\u4E00\u4E2A\u6761\u6B3E\u6216\u534F\u8BAE(contract), \u7528\u6765\u89C4\u8303\u548C\u7EA6\u675F\u9879\u76EE\u5185\u90E8\u7684\u4EE3\u7801\uFF0C\u6216\u8005\u4E3A\u5916\u90E8\u4EE3\u7801\u4EE5\u53CA\u7B2C\u4E09\u65B9\u5E93\u63D0\u4F9B\u5BF9\u63A5\u7684\u89C4\u8303\u3002</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">printLabel</span><span class="token punctuation">(</span>labeledObj<span class="token operator">:</span> <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>labeledObj<span class="token punctuation">.</span>label<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">printLabel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>label<span class="token operator">:</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4E0A\u9762\u7684\u51FD\u6570 <code>printLabel</code> \u63A5\u53D7\u4E00\u4E2A shape (type) \u4E3A <code>{ label: string }</code> \u7684\u53C2\u6570\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 interface \u6765\u5B9A\u4E49\u8FD9\u6837\u4E00\u4E2A shape\uFF0C\u4E0A\u9762\u7684\u4F8B\u5B50\u53EF\u4EE5\u6539\u5199\u5982\u4E0B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">labeledValue</span> <span class="token punctuation">{</span>
  label<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">printLabel</span><span class="token punctuation">(</span>labeledObj<span class="token operator">:</span> labeledValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>labeledObj<span class="token punctuation">.</span>label<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">printLabel</span><span class="token punctuation">(</span><span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">&#39;Shameless&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// &#39;Shameless&#39;</span>
<span class="token keyword">let</span> myObj <span class="token operator">=</span> <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">&#39;The Walking Dead&#39;</span><span class="token punctuation">,</span> season<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span>
<span class="token function">printLabel</span><span class="token punctuation">(</span>myObj<span class="token punctuation">)</span>  <span class="token comment">// ok, &#39;The Walking Dead&#39;</span>
<span class="token function">printLabel</span><span class="token punctuation">(</span><span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">&#39;Game of Thrones&#39;</span><span class="token punctuation">,</span> season<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// error</span>
</code></pre></div><p>\u8FD9\u91CC\u5B9A\u4E49\u4E86\u4E00\u4E2A\u63A5\u53E3 <code>labeledValue</code> \u6765\u63CF\u8FF0 <code>printLabel</code> \u51FD\u6570\u53C2\u6570\u7684 shape\uFF0C\u4F46\u662F\u5728\u51FD\u6570\u8C03\u7528\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u4F20\u9012\u7ED9 <code>printLabel</code> \u7684\u53C2\u6570\u4E0D\u5FC5\u663E\u5F0F\u7684\u5B9E\u73B0 <code>labeledValue</code> \u63A5\u53E3\uFF0C\u53EA\u8981\u4F20\u9012\u7684\u53C2\u6570\u7684 shape \u7B26\u5408\u8981\u6C42\u5373\u53EF\uFF0C\u800C\u4E14\u7F16\u8BD1\u5668\u5728\u6267\u884C\u7C7B\u578B\u68C0\u67E5\u65F6\u4E0D\u5173\u5FC3\u4F20\u9012\u8FDB\u6765\u7684\u53C2\u6570\u4E2D\u5C5E\u6027\u7684\u4F4D\u7F6E\u987A\u5E8F\uFF0C\u53EA\u8981\u5339\u914D\u5B9A\u4E49\u63A5\u53E3\u4E2D\u7684\u5404\u4E2A\u5C5E\u6027\u7684\u7C7B\u578B\u5373\u53EF\u3002</p><p>\u540C\u65F6\uFF0C\u4ECE\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\u53EF\u4EE5\u770B\u51FA\uFF0C\u5982\u679C\u8C03\u7528\u51FD\u6570\u65F6\u4EE5\u53D8\u91CF\u7684\u5F62\u5F0F\u4F20\u9012\u53C2\u6570\uFF08\u5982 <code>myObj</code>\uFF09\uFF0C\u53C2\u6570\u4E2D\u53EF\u4EE5\u6709\u989D\u5916\u7684\u5C5E\u6027\uFF08\u5982 <code>season: 10</code>\uFF09, \u5373\u4F20\u9012\u7684\u53D8\u91CF\u7684 shape \u53EF\u4EE5\u662F\u51FD\u6570\u671F\u671B\u53C2\u6570\u7684 shape \u7684\u8D85\u96C6\u3002\u4F46\u662F\u5982\u679C\u5728\u8C03\u7528\u51FD\u6570\u65F6\u76F4\u63A5\u4F20\u9012\u5BF9\u8C61\u5B57\u9762\u91CF\uFF0C\u90A3\u4E48\u4F20\u9012\u7684\u53C2\u6570\u7684 shape \u5FC5\u987B\u4E0E\u51FD\u6570\u671F\u671B\u53C2\u6570\u7684 shape \u5B8C\u5168\u4E00\u81F4\uFF08\u5C5E\u6027\u7684\u987A\u5E8F\u9664\u5916\uFF09\uFF0C\u5426\u5219\u4F1A\u62A5\u9519\u3002</p><h3 id="optional-properties" tabindex="-1">Optional Properties <a class="header-anchor" href="#optional-properties" aria-hidden="true">#</a></h3><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u63A5\u53E3\u4E2D\u5B9A\u4E49\u7684\u5C5E\u6027\u90FD\u662F\u5FC5\u987B\u7684(required)\uFF0C\u4F8B\u5982\u4E0A\u9762\u4F8B\u5B50\u4E2D <code>printLabel</code> \u51FD\u6570\u7684\u53C2\u6570 <code>labeledObj</code> \u7684\u5C5E\u6027 <code>label</code> \u5C31\u662F\u5FC5\u987B\u7684\uFF0C\u5728\u8C03\u7528\u65F6\u5FC5\u987B\u63D0\u4F9B\u3002\u4F46\u662F\u50CF\u5B9A\u4E49\u51FD\u6570\u65F6\u6307\u5B9A\u53EF\u9009\u53C2\u6570\u4E00\u6837\uFF0C\u4E5F\u53EF\u4EE5\u5728\u5C5E\u6027\u540D\u540E\u9762\u7D27\u8DDF\u7B26\u53F7 <code>?</code> \u6765\u4E3A\u63A5\u53E3\u5B9A\u4E49\u53EF\u9009\u5C5E\u6027\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">squareConfig</span> <span class="token punctuation">{</span>
  color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  width<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createSquare</span><span class="token punctuation">(</span>config<span class="token operator">:</span> squareConfig<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> area<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> newSquare <span class="token operator">=</span> <span class="token punctuation">{</span> color<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> area<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>color<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newSquare<span class="token punctuation">.</span>color <span class="token operator">=</span> config<span class="token punctuation">.</span>color
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newSquare<span class="token punctuation">.</span>area <span class="token operator">=</span> config<span class="token punctuation">.</span>width <span class="token operator">**</span> <span class="token number">2</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newSquare
<span class="token punctuation">}</span>

<span class="token function">createSquare</span><span class="token punctuation">(</span><span class="token punctuation">{</span> color<span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">createSquare</span><span class="token punctuation">(</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">createSquare</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="readonly-properties" tabindex="-1">Readonly Properties <a class="header-anchor" href="#readonly-properties" aria-hidden="true">#</a></h3><p>\u53EF\u4EE5\u5C06\u5C5E\u6027\u6307\u5B9A\u4E3A <code>readonly</code>, \u8FD9\u6837\u5F53\u5B9E\u73B0\u4E86\u8BE5\u63A5\u53E3\u7684\u5BF9\u8C61\u88AB\u521B\u5EFA\u4E4B\u540E\uFF0C\u8FD9\u4E9B\u5C5E\u6027\u5C06\u4E0D\u80FD\u88AB\u4FEE\u6539\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> name<span class="token operator">:</span> <span class="token builtin">string</span>
  price<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> book<span class="token operator">:</span> Product <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Hello, JavaScript&#39;</span><span class="token punctuation">,</span> price<span class="token operator">:</span> <span class="token number">12.5</span> <span class="token punctuation">}</span>
book<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Hello, TypeScript&#39;</span>  <span class="token comment">// error</span>
book<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">34</span>
</code></pre></div><p>TypeScript \u6709\u4E2A <code>ReadonlyArray&lt;T&gt;</code> \u7C7B\u578B\uFF0C\u4E0E <code>Array&lt;T&gt;</code> \u7C7B\u578B\u7C7B\u4F3C\uFF0C\u4F46\u662F\u79FB\u9664\u4E86\u6240\u6709\u7684 mutating method (e.g. <code>pop, push, shift, unshift, reverse</code>)\uFF0C\u8FD9\u80FD\u786E\u4FDD\u5728\u6570\u7EC4\u521B\u5EFA\u4E4B\u540E\uFF0C\u4F60\u65E0\u6CD5\u518D\u6539\u53D8\u5B83\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> b<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> a
b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">22</span> <span class="token comment">// error</span>
b<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// error</span>
b<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">100</span> <span class="token comment">// error</span>
a <span class="token operator">=</span> b <span class="token comment">// error</span>
</code></pre></div><p>\u4ECE\u4E0A\u9762\u53EF\u4EE5\u770B\u5230\uFF0C\u4F60\u751A\u81F3\u4E0D\u80FD\u5C06 <code>ReadonlyArray</code> \u8D4B\u56DE\u7ED9\u5E38\u89C4\u6570\u7EC4, \u9664\u975E\u4F7F\u7528 type assertion:</p><div class="language-ts"><pre><code>a <span class="token operator">=</span> b <span class="token keyword">as</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre></div><blockquote><p>\u6CE8\u610F <code>readonly</code> \u4E0E <code>const</code> \u7684\u533A\u522B\uFF0C<code>const</code> \u9488\u5BF9\u7684\u662F\u53D8\u91CF\uFF0C<code>readonly</code> \u9488\u5BF9\u7684\u662F\u5C5E\u6027\u3002</p></blockquote><h3 id="excess-property-checks" tabindex="-1">Excess Property Checks <a class="header-anchor" href="#excess-property-checks" aria-hidden="true">#</a></h3><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">SquareConfig</span> <span class="token punctuation">{</span>
    color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    width<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createSquare</span><span class="token punctuation">(</span>config<span class="token operator">:</span> SquareConfig<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> area<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> mySquare <span class="token operator">=</span> <span class="token function">createSquare</span><span class="token punctuation">(</span><span class="token punctuation">{</span> colour<span class="token operator">:</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4F60\u53EF\u80FD\u8BA4\u4E3A\u4E0A\u9762\u7684\u4EE3\u7801\u6CA1\u95EE\u9898\uFF0C\u7136\u800C TypeScript \u4F1A\u7F16\u8BD1\u62A5\u9519\uFF0C\u56E0\u4E3A\u5F53\u628A\u5BF9\u8C61\u5B57\u9762\u91CF(Object literals)\u8D4B\u503C\u7ED9\u5176\u5B83\u53D8\u91CF\uFF0C\u6216\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570\u4F20\u9012\u65F6\uFF0CTypeScript \u4F1A\u8FDB\u884C\u989D\u5916\u7684\u5C5E\u6027\u68C0\u67E5\uFF0C\u5982\u679C\u5BF9\u8C61\u5B57\u9762\u91CF\u5177\u6709\u76EE\u6807\u7C7B\u578B\u4E0D\u5177\u6709\u7684\u5C5E\u6027\uFF0C\u5C31\u5C06\u5BFC\u81F4\u9519\u8BEF\u3002\u6240\u4EE5\u4E0A\u9762\u4EE3\u7801\u4E2D\u6700\u540E\u4E00\u884C\u7684\u51FD\u6570\u8C03\u7528\u5C06\u62A5\u9519\uFF0C\u56E0\u4E3A\u5728\u76EE\u6807\u53C2\u6570\u7C7B\u578B\u4E2D\u4E0D\u5B58\u5728 <code>colour</code> \u5C5E\u6027\u3002</p><p>\u5F53\u7136\u53EF\u4EE5\u7B80\u5355\u7684\u4F7F\u7528 type assertion \u6765\u907F\u5F00\u8FD9\u79CD\u7C7B\u578B\u68C0\u67E5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> mySquare <span class="token operator">=</span> <span class="token function">createSquare</span><span class="token punctuation">(</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> opacity<span class="token operator">:</span> <span class="token number">0.5</span> <span class="token punctuation">}</span> <span class="token keyword">as</span> SquareConfig<span class="token punctuation">)</span>
</code></pre></div><p>\u4F46\u662F\u66F4\u597D\u7684\u65B9\u6CD5\u662F\u5728\u5B9A\u4E49 interface \u65F6\u6DFB\u52A0\u4E00\u4E2A string index signature\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">SquareConfig</span> <span class="token punctuation">{</span>
  color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  width<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token punctuation">[</span>propName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> sc<span class="token operator">:</span> SquareConfig <span class="token operator">=</span> <span class="token punctuation">{</span>color<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> opacity<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">}</span>  <span class="token comment">// ok</span>
</code></pre></div><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C<code>SquareConfig</code> \u7C7B\u578B\u7684\u53D8\u91CF\u53EF\u4EE5\u6709\u4EFB\u610F\u6570\u91CF\u7684\u5C5E\u6027\uFF0C\u53EA\u8981\u4E0D\u662F <code>color</code> \u548C <code>width</code>, \u5B83\u4EEC\u7684\u7C7B\u578B\u4E0D\u91CD\u8981\u3002</p><h3 id="function-types" tabindex="-1">Function Types <a class="header-anchor" href="#function-types" aria-hidden="true">#</a></h3><p>Interface \u9664\u4E86\u80FD\u63CF\u8FF0\u5BF9\u8C61\u7C7B\u578B\u5916\uFF0C\u8FD8\u53EF\u4EE5\u7528\u6765\u63CF\u8FF0\u51FD\u6570\u7C7B\u578B\uFF0C\u5C31\u50CF\u51FD\u6570\u58F0\u660E\u4E00\u6837\uFF0C\u4F46\u53EA\u9700\u8981\u7ED9\u51FA\u53C2\u6570\u5217\u8868\u548C\u8FD4\u56DE\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">SearchFunc</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>source<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> subString<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E00\u65E6\u5B9A\u4E49\u4E86\u8FD9\u6837\u7684\u63A5\u53E3\uFF0C\u5C31\u53EF\u4EE5\u7528\u5B83\u6765\u6307\u5B9A\u51FD\u6570\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> mySearch<span class="token operator">:</span> SearchFunc<span class="token punctuation">;</span>
<span class="token function-variable function">mySearch</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>source<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> subString<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>subString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E8B\u5B9E\u4E0A\u5982\u679C\u8D4B\u503C\u8BED\u53E5\u53F3\u8FB9\u7684\u51FD\u6570\u4E0D\u6307\u5B9A\u4EFB\u4F55\u7C7B\u578B\uFF0CTypeScript \u4E5F\u4F1A\u6839\u636E\u5DE6\u8FB9\u7684\u7C7B\u578B\u63A8\u65AD\u51FA\u53F3\u8FB9\u7684\u53C2\u6570\u7C7B\u578B\u548C\u8FD4\u56DE\u7C7B\u578B\uFF0C\u7136\u540E\u5B9E\u65BD\u7C7B\u578B\u68C0\u67E5\u3002</p><h3 id="indexable-types" tabindex="-1">Indexable Types <a class="header-anchor" href="#indexable-types" aria-hidden="true">#</a></h3><p>Interface \u4E5F\u53EF\u4EE5\u7528\u6765\u63CF\u8FF0\u7D22\u5F15\u7C7B\u578B\uFF0C\u63CF\u8FF0\u7684 signature \u5305\u62EC\u4E24\u4E2A\u90E8\u5206\uFF0C\u7D22\u5F15\u7684\u7C7B\u578B\u548C\u88AB\u7D22\u5F15\u503C\u7684\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">StringObj</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> myArray<span class="token operator">:</span> StringObj <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Fred&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> myObject1<span class="token operator">:</span> StringObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token number">3</span><span class="token operator">:</span> <span class="token string">&#39;Susan&#39;</span><span class="token punctuation">,</span>
  <span class="token number">9</span><span class="token operator">:</span> <span class="token string">&#39;Rachael&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;12&#39;</span><span class="token operator">:</span> <span class="token string">&#39;Monica&#39;</span>   <span class="token comment">// work</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> myObject2<span class="token operator">:</span> StringObj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;1a&#39;</span><span class="token operator">:</span> <span class="token string">&quot;doesn&#39;t work&quot;</span> <span class="token punctuation">}</span>  <span class="token comment">// error</span>
</code></pre></div><p>TypeScript \u652F\u6301\u4E24\u79CD\u7D22\u5F15\u7C7B\u578B\uFF1A<code>string</code> \u548C <code>number</code>, \u53EF\u4EE5\u5728\u4E00\u4E2A\u63A5\u53E3\u4E2D\u540C\u65F6\u5B9A\u4E49\u8FD9\u4E24\u79CD\u7C7B\u578B\u7684\u7D22\u5F15\uFF0C\u4F46\u662F\u6570\u503C\u7D22\u5F15(numeric indexer)\u7684\u8FD4\u56DE\u7C7B\u578B\u5FC5\u987B\u662F\u5B57\u7B26\u4E32\u7D22\u5F15(string indexer)\u7684\u8FD4\u56DE\u7C7B\u578B\u7684\u5B50\u7C7B\u578B(subtype)\uFF0C\u8FD9\u662F\u56E0\u4E3A\u5728 JavaScript \u4E2D\uFF0C\u901A\u8FC7\u7D22\u5F15\u8BBF\u95EE\u5BF9\u8C61\u65F6\uFF0C\u6570\u503C\u7D22\u5F15\u5B9E\u8D28\u4E0A\u662F\u88AB\u8F6C\u6362\u6210\u4E86\u5B57\u7B26\u4E32\u7D22\u5F15\u7684\uFF0C\u6240\u4EE5\u6570\u503C\u7D22\u5F15\u7684\u8FD4\u56DE\u7C7B\u578B\u5FC5\u987B\u4E0E\u5B57\u7B26\u4E32\u7D22\u5F15\u7684\u8FD4\u56DE\u7C7B\u578B\u517C\u5BB9\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    breed<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Error: indexing with a numeric string might get you a completely separate type of Animal!</span>
<span class="token keyword">interface</span> <span class="token class-name">NotOkay</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> Animal<span class="token punctuation">;</span>
    <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> Dog<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5982\u679C\u63A5\u53E3\u4E2D\u5B9A\u4E49\u4E86\u5B57\u7B26\u4E32\u7D22\u5F15\uFF0C\u8FD9\u5C06\u8FEB\u4F7F\u6574\u4E2A\u7C7B\u578B\u7684\u6240\u6709\u5C5E\u6027\u90FD\u5FC5\u987B\u8FD4\u56DE\u4E0E\u5B57\u7B26\u4E32\u7D22\u5F15\u7684\u8FD4\u56DE\u7C7B\u578B\u5339\u914D\u7684\u7C7B\u578B\uFF0C\u5426\u8005\u4E0D\u80FD\u901A\u8FC7\u7C7B\u578B\u68C0\u67E5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">numberDictionary</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token comment">// \u8FD9\u91CC\u786E\u5B9A\u4E86\u6240\u6709\u5176\u5B83\u5C5E\u6027\u7684\u8FD4\u56DE\u7C7B\u578B\u90FD\u5FC5\u987B\u662F number</span>
  length<span class="token operator">:</span> <span class="token builtin">number</span>  <span class="token comment">// ok</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>  <span class="token comment">// error</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="class-types" tabindex="-1">Class Types <a class="header-anchor" href="#class-types" aria-hidden="true">#</a></h3><p>interface \u6700\u5E38\u89C1\u7684\u7528\u5904\u662F\u4E3A\u7C7B(class)\u63D0\u4F9B\u4E00\u4E2A\u9700\u8981\u9075\u5B88\u7684\u534F\u8BAE(contract)\uFF0C\u5982\u679C\u4E00\u4E2A\u7C7B\u8981\u5B9E\u73B0\u67D0\u4E2A\u63A5\u53E3\uFF0C\u90A3\u4E48\u5B83\u5FC5\u987B\u5B9E\u73B0\u8FD9\u4E2A\u63A5\u53E3\u5B9A\u4E49\u7684\u6240\u6709\u5185\u5BB9(\u5C5E\u6027\u548C\u65B9\u6CD5\uFF0C\u5305\u62EC\u7EE7\u627F\u94FE\u4E0A\u7684):</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">clockInterface</span> <span class="token punctuation">{</span>
  currentTime<span class="token operator">:</span> Date
  <span class="token function">setTime</span><span class="token punctuation">(</span>d<span class="token operator">:</span> Date<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Clock</span> <span class="token keyword">implements</span> <span class="token class-name">clockInterface</span> <span class="token punctuation">{</span>
  currentTime<span class="token operator">:</span> Date
  <span class="token function">constructor</span><span class="token punctuation">(</span>h<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> m<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//...</span>
  <span class="token punctuation">}</span>
  <span class="token function">setTime</span><span class="token punctuation">(</span>d<span class="token operator">:</span> Date<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>currentTime <span class="token operator">=</span> d
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6CE8\u610F\u63A5\u53E3\u53EA\u80FD\u63CF\u8FF0\u4E00\u4E2A\u7C7B\u7684\u516C\u6709\u90E8\u5206(public)\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">clockInterface</span> <span class="token punctuation">{</span>
  currentTime<span class="token operator">:</span> Date
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Clock</span> <span class="token keyword">implements</span> <span class="token class-name">clockInterface</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> currentTime<span class="token operator">:</span> Date  <span class="token comment">// error</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5F53\u4F7F\u7528\u7C7B\u548C\u63A5\u53E3\u65F6\uFF0C\u6CE8\u610F\u5230\uFF0C\u4E00\u4E2A\u7C7B\u63CF\u8FF0\u4E86\u4E24\u90E8\u5206\uFF1A\u9759\u6001\u90E8\u5206(static side)\u548C\u5B9E\u4F8B\u90E8\u5206(instance side)\uFF0C\u5982\u679C\u4F60\u5B9A\u4E49\u4E86\u4E00\u4E2A\u7528\u6765\u63CF\u8FF0\u6784\u9020\u51FD\u6570\u7684\u63A5\u53E3\uFF0C\u7136\u540E\u8BD5\u56FE\u521B\u5EFA\u4E00\u4E2A\u7C7B\u6765\u5B9E\u73B0\u8FD9\u4E2A\u63A5\u53E3\uFF0C\u4F60\u5C06\u4F1A\u5931\u8D25\u3002This is because when a class implements an interface, only the instance side of the class is checked. Since the constructor sits in the static side, it is not included in this check. \u66F4\u591A\u7EC6\u8282\u770B\u5B98\u65B9\u6587\u6863\u3002</p><h3 id="extending-interfaces" tabindex="-1">Extending Interfaces <a class="header-anchor" href="#extending-interfaces" aria-hidden="true">#</a></h3><p>\u50CF\u7C7B\u7684\u7EE7\u627F\u4E00\u6837\uFF0C\u63A5\u53E3\u4E5F\u53EF\u4EE5\u8FDB\u884C\u6269\u5C55\uFF0C\u8FD9\u5141\u8BB8\u4F60\u5C06\u67D0\u4E00\u4E2A\u63A5\u53E3\u4E2D\u7684\u6210\u5458\u590D\u5236\u5230\u53E6\u4E00\u4E2A\u63A5\u53E3\u4E2D\uFF0C\u8BA9\u4F60\u5728\u5C06\u63A5\u53E3\u5206\u5272\u6210\u53EF\u91CD\u7528\u7684\u7EC4\u4EF6\u65F6\u6709\u66F4\u9AD8\u7684\u7075\u6D3B\u6027\u3002\u6269\u5C55\u63A5\u53E3\u4F7F\u7528 <code>extends</code> \u5173\u952E\u5B57\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span>
  color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Property</span> <span class="token punctuation">{</span>
  sideLength<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Square</span> <span class="token keyword">extends</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span>
  area<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E00\u4E2A\u63A5\u53E3\u53EF\u4EE5\u6269\u5C55\u591A\u4E2A\u63A5\u53E3</span>
<span class="token keyword">interface</span> <span class="token class-name">anotherSquare</span> <span class="token keyword">extends</span> <span class="token class-name">Shape</span><span class="token punctuation">,</span> Property <span class="token punctuation">{</span>
  area<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> square <span class="token operator">=</span> <span class="token operator">&lt;</span>Square<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
square<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&#39;blue&#39;</span>
square<span class="token punctuation">.</span>area <span class="token operator">=</span> <span class="token number">100</span>

<span class="token keyword">let</span> anotherSq <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> anotherSquare
anotherSq<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span>
anotherSq<span class="token punctuation">.</span>sideLength <span class="token operator">=</span> <span class="token number">10</span>
anotherSq<span class="token punctuation">.</span>area <span class="token operator">=</span> anotherSq<span class="token punctuation">.</span>sideLength <span class="token operator">**</span> <span class="token number">2</span>
</code></pre></div><h3 id="hybrid-types" tabindex="-1">Hybrid Types <a class="header-anchor" href="#hybrid-types" aria-hidden="true">#</a></h3><p>One such example is an object that acts as both a function and an object, with additional properties:</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>start<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>
  interval<span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Counter <span class="token punctuation">{</span>
  <span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token operator">&lt;</span>Counter<span class="token operator">&gt;</span><span class="token keyword">function</span> <span class="token punctuation">(</span>start<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  counter<span class="token punctuation">.</span>interval <span class="token operator">=</span> <span class="token number">10</span>
  counter<span class="token punctuation">.</span><span class="token function-variable function">reset</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">return</span> counter
<span class="token punctuation">}</span>
</code></pre></div><h3 id="interfaces-extending-classes" tabindex="-1">Interfaces Extending Classes <a class="header-anchor" href="#interfaces-extending-classes" aria-hidden="true">#</a></h3><p>\u63A5\u53E3\u4E5F\u53EF\u4EE5 extends \u7C7B\uFF0C\u5F53\u63A5\u53E3\u6269\u5C55\u4E00\u4E2A\u7C7B\u65F6\uFF0C\u5B83\u7EE7\u627F\u8FD9\u4E2A\u7C7B\u7684\u6240\u6709\u6210\u5458(\u5305\u62EC\u79C1\u6709\u548C\u516C\u6709\u90E8\u5206)\uFF0C\u4F46\u4E0D\u5305\u542B\u6210\u5458\u7684\u5B9E\u73B0(implementations)\uFF0C\u5C31\u597D\u6BD4\u58F0\u660E\u4E86\u4E00\u4E2A\u62E5\u6709\u8FD9\u4E2A\u7C7B\u6240\u6709\u6210\u5458\u7684\u63A5\u53E3\u3002</p><ul><li>\u57FA\u7C7B\u53EA\u5305\u542B\u516C\u6709\u6210\u5458\u7684\u60C5\u51B5\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token comment">// \u57FA\u7C7B\u53EA\u5305\u542B\u516C\u6709\u6210\u5458 (public member)</span>
<span class="token keyword">class</span> <span class="token class-name">PublicBase</span> <span class="token punctuation">{</span>
  publicState<span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u63A5\u53E3\u7EE7\u627F\u7C7B\u7684\u6240\u6709\u6210\u5458</span>
<span class="token keyword">interface</span> <span class="token class-name">PublicBaseInterface</span> <span class="token keyword">extends</span> <span class="token class-name">PublicBase</span> <span class="token punctuation">{</span>
  <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5B50\u7C7B\u663E\u5F0F\u5730\u5B9E\u73B0\u8BE5\u63A5\u53E3</span>
<span class="token keyword">class</span> <span class="token class-name">SubA</span> <span class="token keyword">extends</span> <span class="token class-name">PublicBase</span> <span class="token keyword">implements</span> <span class="token class-name">PublicBaseInterface</span> <span class="token punctuation">{</span>
  <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5B50\u7C7B\u4E5F\u53EF\u4EE5\u9690\u5F0F\u7684\u5B9E\u73B0\u8BE5\u63A5\u53E3\uFF0C\u8FD9\u91CC SubB \u7684\u5B9E\u4F8B (instance) \u53EF\u4EE5\u8D4B\u503C\u7ED9 PublicBaseInterface \u7C7B\u578B\uFF0C\u4E8C\u8005\u517C\u5BB9</span>
<span class="token keyword">class</span> <span class="token class-name">SubB</span> <span class="token keyword">extends</span> <span class="token class-name">PublicBase</span> <span class="token punctuation">{</span>
  <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5982\u679C\u57FA\u7C7B\u53EA\u5305\u542B\u516C\u6709\u6210\u5458\uFF0C\u975E\u5B50\u7C7B\u4E5F\u53EF\u4EE5\u5B9E\u73B0\u8BE5\u63A5\u53E3</span>
<span class="token keyword">class</span> <span class="token class-name">Other</span> <span class="token keyword">implements</span> <span class="token class-name">PublicBaseInterface</span> <span class="token punctuation">{</span>
  publicState<span class="token operator">:</span> <span class="token builtin">any</span>
  <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> a<span class="token operator">:</span> PublicBaseInterface <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
<span class="token keyword">let</span> b<span class="token operator">:</span> PublicBaseInterface <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
<span class="token keyword">let</span> c<span class="token operator">:</span> PublicBaseInterface <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Other</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
</code></pre></div><ul><li>\u57FA\u7C7B\u5305\u542B\u79C1\u6709\u6210\u5458\u6216\u4FDD\u62A4\u6210\u5458\u7684\u60C5\u51B5\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token comment">// \u57FA\u7C7B\u5305\u542B\u79C1\u6709\u6210\u5458 (private member)</span>
<span class="token keyword">class</span> <span class="token class-name">PrivateBase</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> privateState<span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u63A5\u53E3\u7EE7\u627F\u7C7B\u7684\u6240\u6709\u6210\u5458\uFF0C\u5305\u62EC\u79C1\u6709\u6210\u5458</span>
<span class="token keyword">interface</span> <span class="token class-name">PrivateBaseInterface</span> <span class="token keyword">extends</span> <span class="token class-name">PrivateBase</span> <span class="token punctuation">{</span>
  <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5B50\u7C7B\u663E\u793A\u5730\u5B9E\u73B0\u8BE5\u63A5\u53E3</span>
<span class="token keyword">class</span> <span class="token class-name">SubA</span> <span class="token keyword">extends</span> <span class="token class-name">PrivateBase</span> <span class="token keyword">implements</span> <span class="token class-name">PrivateBaseInterface</span> <span class="token punctuation">{</span>
  <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5B50\u7C7B\u4E5F\u53EF\u4EE5\u9690\u5F0F\u7684\u5B9E\u73B0\u8BE5\u63A5\u53E3\uFF0C\u8FD9\u91CC SubB \u7684\u5B9E\u4F8B (instance) \u53EF\u4EE5\u8D4B\u503C\u7ED9 PrivateBaseInterface \u7C7B\u578B\uFF0C\u4E8C\u8005\u517C\u5BB9</span>
<span class="token keyword">class</span> <span class="token class-name">SubB</span> <span class="token keyword">extends</span> <span class="token class-name">PrivateBase</span> <span class="token punctuation">{</span>
  <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Doesn&#39;t work\uFF0C\u5982\u679C\u57FA\u7C7B\u5305\u542B\u79C1\u6709\u6210\u5458\u6216\u4FDD\u62A4\u6210\u5458(protected member)\uFF0C\u4EFB\u4F55\u5176\u5B83\u975E\u5B50\u7C7B\u90FD\u4E0D\u80FD\u5B9E\u73B0\u8BE5\u63A5\u53E3\uFF0C</span>
<span class="token comment">// \u56E0\u4E3A\u57FA\u7C7B\u7684\u79C1\u6709\u6210\u5458\u548C\u4FDD\u62A4\u6210\u5458\u53EA\u80FD\u5728\u5B83\u7684\u540E\u4EE3 (descendants) \u4E2D\u5171\u4EAB\u3002</span>
<span class="token keyword">class</span> <span class="token class-name">Other</span> <span class="token keyword">implements</span> <span class="token class-name">PrivateBaseInterface</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> privateState<span class="token operator">:</span> <span class="token builtin">any</span>
  <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> a<span class="token operator">:</span> PrivateBaseInterface <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
<span class="token keyword">let</span> b<span class="token operator">:</span> PrivateBaseInterface <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
</code></pre></div><blockquote><p>\u603B\u4E4B\uFF0C\u5982\u679C\u63A5\u53E3 I extends \u7C7B B\uFF0C\u90A3\u4E48\u5BF9\u4E8E\u4EFB\u4F55\u7C7B O \u8981\u60F3 implements \u63A5\u53E3 I\uFF0C \u5F53\u4E14\u4EC5\u5F53\u7C7B O \u7684\u79C1\u6709\u6210\u5458\u548C\u4FDD\u62A4\u6210\u5458\u4E0E\u7C7B B \u540C\u6E90\u3002</p></blockquote><h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Greeter</span> <span class="token punctuation">{</span>
  greeting<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>greeting <span class="token operator">=</span> message
  <span class="token punctuation">}</span>
  <span class="token function">greeter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>greeting<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> greeter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Greeter</span><span class="token punctuation">(</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span>
greeter<span class="token punctuation">.</span><span class="token function">greeter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// Hello, world</span>
</code></pre></div><p>TypeScript \u7C7B\u7684\u7528\u6CD5\u4E0E ES6 \u7C7B\u7684\u7528\u6CD5\u57FA\u672C\u4E00\u81F4\uFF0C\u4F46\u662F\u589E\u52A0\u4E86\u79C1\u6709\u6210\u5458(private member)\u548C\u4FDD\u62A4\u6210\u5458(protected member)\u7684\u6982\u5FF5\u3002</p><h3 id="public-by-default" tabindex="-1">Public by default <a class="header-anchor" href="#public-by-default" aria-hidden="true">#</a></h3><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u7C7B\u7684\u6210\u5458\u90FD\u662F\u516C\u6709\u7684, \u5F53\u7136\u4F60\u4E5F\u53EF\u4EE5\u7528\u5173\u952E\u5B57 public \u6765\u663E\u5F0F\u7684\u6307\u5B9A\u516C\u6709\u6210\u5458\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">constructor</span><span class="token punctuation">(</span>theName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> theName<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">move</span><span class="token punctuation">(</span>distanceInMeters<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> moved </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>distanceInMeters<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">m.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>\u7C7B\u7684\u516C\u6709\u5C5E\u6027\u53EF\u4EE5\u5728\u5B83\u7684\u5B50\u7C7B(subclass)\u4E2D\u901A\u8FC7 <code>this</code> \u6765\u8BBF\u95EE\u3002</li><li>\u7C7B\u7684\u516C\u6709\u65B9\u6CD5\u53EF\u4EE5\u5728\u5B83\u7684\u5B50\u7C7B\u4E2D\u901A\u8FC7 <code>super</code> \u6765\u8BBF\u95EE\u3002</li></ul><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>theName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> theName <span class="token punctuation">}</span>
  <span class="token function">move</span><span class="token punctuation">(</span>distanceInMeters<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> moved </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>distanceInMeters<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">m.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Snake</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  length<span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> len<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>  <span class="token comment">// \u5728\u5B50\u7C7B\u7684\u6784\u9020\u51FD\u6570\u5185\u5FC5\u987B\u9996\u5148\u8C03\u7528\u7236\u7C7B\u7684\u6784\u9020\u51FD\u6570</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">=</span> len
  <span class="token punctuation">}</span>
  <span class="token function">move</span><span class="token punctuation">(</span>distanceInMeters <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u91CD\u8F7D\u7236\u7C7B\u7684 move \u65B9\u6CD5</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Slithering...&quot;</span><span class="token punctuation">)</span>
      <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>distanceInMeters<span class="token punctuation">)</span>  <span class="token comment">// \u8BBF\u95EE\u7236\u7C7B\u7684\u516C\u6709\u65B9\u6CD5</span>
  <span class="token punctuation">}</span>
  <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/* \u8BBF\u95EE\u7236\u7C7B\u7684\u516C\u6709\u5C5E\u6027 */ is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">m long</span><span class="token template-punctuation string">\`</span></span> <span class="token comment">//</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="understanding-private" tabindex="-1">Understanding private <a class="header-anchor" href="#understanding-private" aria-hidden="true">#</a></h3><p>\u5F53\u7C7B\u7684\u6210\u5458\u88AB\u6807\u8BB0\u6210 <code>private</code>, \u8BE5\u6210\u5458\u4E0D\u80FD\u5728\u8BE5\u7C7B\u7684\u5916\u90E8\u88AB\u8BBF\u95EE\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>theName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> theName <span class="token punctuation">}</span>
  <span class="token function">move</span><span class="token punctuation">(</span>distanceInMeters<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> moved </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>distanceInMeters<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">m.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&#39;Dog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name  <span class="token comment">// Error\uFF01, &#39;name&#39; \u662F\u79C1\u6709\u5C5E\u6027\uFF0C\u65E0\u6CD5\u5728 Animal \u5916\u90E8\u8BBF\u95EE</span>
</code></pre></div><p>TypeScript \u662F\u4E00\u79CD\u7ED3\u6784\u5316\u7684\u7C7B\u578B\u7CFB\u7EDF\uFF0C\u5F53\u6BD4\u8F83\u4E24\u4E2A\u4E0D\u540C\u7684\u7C7B\u578B\u65F6\uFF0C\u4E0D\u8BBA\u8FD9\u4E24\u4E2A\u7C7B\u578B\u6765\u81EA\u54EA\u91CC\uFF0C\u53EA\u8981\u5B83\u4EEC\u6240\u6709\u6210\u5458\u7684\u7C7B\u578B\u90FD\u662F\u517C\u5BB9\u7684\uFF0C\u5C31\u8BA4\u4E3A\u8FD9\u4E24\u4E2A\u7C7B\u578B\u662F\u517C\u5BB9\u7684\u3002</p><p>\u7136\u800C\u5F53\u88AB\u6BD4\u8F83\u7684\u7C7B\u578B\u4E2D\u542B\u6709 <code>private</code> \u6216 <code>protected</code> \u6210\u5458\u65F6\uFF0C\u60C5\u51B5\u53C8\u6709\u6240\u4E0D\u540C\uFF0C\u8FD9\u6837\u7684\u4E24\u4E2A\u7C7B\u578B\u8981\u517C\u5BB9\uFF0C\u9664\u4E86\u6210\u5458\u672C\u8EAB\u7684\u7C7B\u578B\u8981\u517C\u5BB9\u4E4B\u5916\uFF0C\u5B83\u4EEC\u6240\u6709\u540C\u540D\u7684\u79C1\u6709\u6210\u5458\u6216\u4FDD\u62A4\u6210\u5458\u90FD\u5FC5\u987B\u540C\u6E90\uFF0C\u5373\u58F0\u660E\u4E8E\u540C\u4E00\u4E2A\u5730\u65B9\u3002</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> name<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>theName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> theName <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Elephant</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>theName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">super</span><span class="token punctuation">(</span>theName<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> name<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>theName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> theName <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> animal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&#39;Jack&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> elephant <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Elephant</span><span class="token punctuation">(</span><span class="token string">&#39;Rose&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> employee <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token string">&#39;Rachael&#39;</span><span class="token punctuation">)</span>

animal <span class="token operator">=</span> elephant <span class="token comment">// Ok</span>
animal <span class="token operator">=</span> employee <span class="token comment">// Error, \u79C1\u6709\u6210\u5458\u4E0D\u540C\u6E90\uFF0C\u5373\u4F7F\u6709\u5B8C\u5168\u76F8\u540C\u7684 shape\uFF0C\u4E5F\u4E0D\u517C\u5BB9</span>
</code></pre></div><ul><li>\u7C7B\u7684\u79C1\u6709\u6210\u5458\u53EA\u5728\u8BE5\u7C7B\u7684\u5185\u90E8\u53EF\u89C1\uFF0C\u5728\u4EFB\u4F55\u7EE7\u627F\u7C7B\u5185\u90E8\u90FD\u4E0D\u53EF\u89C1\uFF0C\u4E5F\u65E0\u6CD5\u901A\u8FC7\u5B9E\u4F8B\u76F4\u63A5\u8BBF\u95EE</li></ul><h3 id="understanding-protected" tabindex="-1">Understanding protected <a class="header-anchor" href="#understanding-protected" aria-hidden="true">#</a></h3><p>\u7C7B\u7684\u4FDD\u62A4\u6210\u5458\u4E0E\u79C1\u6709\u6210\u5458\u7C7B\u4F3C\uFF0C\u552F\u4E00\u7684\u533A\u522B\u662F\u4FDD\u62A4\u6210\u5458\u5728\u7EE7\u627F\u7C7B\u5185\u90E8\u662F\u53EF\u4EE5\u76F4\u63A5\u8BBF\u95EE\u7684\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">SuperClass</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>
    <span class="token keyword">public</span> publicProp<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    <span class="token keyword">private</span> privateProp<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    <span class="token keyword">protected</span> protectedProp<span class="token operator">:</span> <span class="token builtin">any</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
  <span class="token function">publicMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
  <span class="token keyword">private</span> <span class="token function">privateMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
  <span class="token keyword">protected</span> <span class="token function">protectedMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">SubClass</span> <span class="token keyword">extends</span> <span class="token class-name">SuperClass</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>pub<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> pri<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> pro<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">super</span><span class="token punctuation">(</span>pub<span class="token punctuation">,</span> pri<span class="token punctuation">,</span> pro<span class="token punctuation">)</span> <span class="token punctuation">}</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>publicProp <span class="token comment">// ok</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>protectedProp <span class="token comment">// ok \u57FA\u7C7B\u7684\u4FDD\u62A4\u6210\u5458\u5728\u6D3E\u751F\u7C7B\u4E2D\u53EF\u89C1</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>privateProp <span class="token comment">// error \u57FA\u7C7B\u7684\u79C1\u6709\u6210\u5458\u5728\u6D3E\u751F\u7C7B\u4E2D\u4E0D\u53EF\u89C1</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">publicMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">protectedMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok \u57FA\u7C7B\u7684\u4FDD\u62A4\u6210\u5458\u5728\u6D3E\u751F\u7C7B\u4E2D\u53EF\u89C1</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">privateMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// error \u57FA\u7C7B\u7684\u79C1\u6709\u6210\u5458\u5728\u6D3E\u751F\u7C7B\u4E2D\u4E0D\u53EF\u89C1</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5728\u5B9E\u4F8B\u4E0A\u53EA\u80FD\u8BBF\u95EE\u516C\u6709\u6210\u5458\uFF0C\u79C1\u6709\u548C\u4FDD\u62A4\u6210\u5458\u90FD\u4E0D\u53EF\u89C1</span>
<span class="token keyword">let</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperClass</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
sc<span class="token punctuation">.</span>privateProp <span class="token comment">// error</span>
sc<span class="token punctuation">.</span><span class="token function">privateMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// error</span>
sc<span class="token punctuation">.</span>protectedProp <span class="token comment">// error</span>
sc<span class="token punctuation">.</span><span class="token function">protectedMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// error</span>
</code></pre></div><p>\u6784\u9020\u51FD\u6570\u4E5F\u53EF\u4EE5\u88AB\u6307\u5B9A\u4E3A <code>protected</code>\uFF0C\u8FD9\u610F\u5473\u7740\u8FD9\u4E2A\u7C7B\u4E0D\u80FD\u88AB\u5B9E\u4F8B\u5316\uFF0C\u4F46\u662F\u4ECD\u7136\u53EF\u4EE5\u88AB\u7EE7\u627F\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">ProtectedClass</span> <span class="token punctuation">{</span>
  <span class="token keyword">protected</span> <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// ProtectedClass \u7C7B\u53EF\u4EE5\u88AB\u7EE7\u627F\uFF0C\u56E0\u4E3A\u5B83\u7684\u6784\u9020\u51FD\u6570\u5728\u5B50\u7C7B\u5185\u90E8\u53EF\u4EE5\u88AB\u8BBF\u95EE</span>
<span class="token keyword">class</span> <span class="token class-name">SubClass</span> <span class="token keyword">extends</span> <span class="token class-name">ProtectedClass</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> pc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProtectedClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// Error! ProtectedClass \u7684\u6784\u9020\u51FD\u6570\u662F protected\uFF0C\u5916\u90E8\u4E0D\u53EF\u89C1\uFF0C\u4E0D\u80FD\u88AB\u5B9E\u4F8B\u5316</span>
</code></pre></div><ul><li>\u7C7B\u7684\u4FDD\u62A4\u6210\u5458\u53EA\u5728\u8BE5\u7C7B\u548C\u8BE5\u7C7B\u7684\u7EE7\u627F\u7C7B\u4E2D\u53EF\u89C1\uFF0C\u65E0\u6CD5\u901A\u8FC7\u5B9E\u4F8B\u8BBF\u95EE\u3002</li></ul><h3 id="readonly-modifier" tabindex="-1">Readonly modifier <a class="header-anchor" href="#readonly-modifier" aria-hidden="true">#</a></h3><p>\u53EF\u4EE5\u7528 <code>readonly</code> \u5173\u952E\u5B57\u6765\u58F0\u660E\u53EA\u8BFB\u5C5E\u6027\uFF0C\u53EA\u8BFB\u5C5E\u6027\u5FC5\u987B\u5728\u58F0\u660E\u65F6\u521D\u59CB\u5316\uFF0C\u6216\u5728\u6784\u9020\u51FD\u6570\u4E2D\u521D\u59CB\u5316\uFF0C\u4E00\u65E6\u88AB\u521D\u59CB\u5316\uFF0C\u5B83\u4EEC\u7684\u503C\u5C31\u4E0D\u80FD\u88AB\u4FEE\u6539\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">ReadonlyClass</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> prop1<span class="token operator">:</span> <span class="token builtin">any</span>
  <span class="token keyword">readonly</span> prop2<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>theProp<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prop1 <span class="token operator">=</span> theProp <span class="token punctuation">}</span>
  <span class="token function">changeProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>prop1 <span class="token operator">=</span> <span class="token number">2</span> <span class="token comment">// Error</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>prop2 <span class="token operator">=</span> <span class="token number">2</span> <span class="token comment">// Error</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> rc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReadonlyClass</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
rc<span class="token punctuation">.</span>prop1 <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// Error</span>
rc<span class="token punctuation">.</span>prop2 <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span> <span class="token comment">// Error</span>

</code></pre></div><h3 id="parameter-properties" tabindex="-1">Parameter Properties <a class="header-anchor" href="#parameter-properties" aria-hidden="true">#</a></h3><p>\u5982\u679C\u7C7B\u4E2D\u58F0\u660E\u7684\u5C5E\u6027\u5728\u6784\u9020\u51FD\u6570\u4E2D\u53EA\u662F\u88AB\u7B80\u5355\u7684\u7ACB\u5373\u521D\u59CB\u5316\uFF0C\u53EF\u4EE5\u5C06\u5C5E\u6027\u7684\u58F0\u660E\u653E\u5230\u6784\u9020\u51FD\u6570\u7684\u53C2\u6570\u5217\u8868\u4E2D\uFF0C\u8FD9\u53EF\u5C06\u58F0\u660E\u8FC7\u7A0B\u548C\u521D\u59CB\u5316\u8FC7\u7A0B\u5408\u4E8C\u4E3A\u4E00\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">myClass</span> <span class="token punctuation">{</span>
  prop1<span class="token operator">:</span> <span class="token builtin">any</span>
  <span class="token keyword">private</span> prop2<span class="token operator">:</span> <span class="token builtin">any</span>
  <span class="token keyword">protected</span> prop3<span class="token operator">:</span> <span class="token builtin">any</span>
  <span class="token keyword">readonly</span> prop4<span class="token operator">:</span> <span class="token builtin">any</span>
  <span class="token comment">// \u5C5E\u6027\u53EA\u662F\u7B80\u5355\u7684\u5728\u6784\u9020\u51FD\u6570\u4E2D\u521D\u59CB\u5316</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>p1<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> p2<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> p3<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> p4<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>prop1 <span class="token operator">=</span> p1
    <span class="token keyword">this</span><span class="token punctuation">.</span>prop2 <span class="token operator">=</span> p2
    <span class="token keyword">this</span><span class="token punctuation">.</span>prop3 <span class="token operator">=</span> p3
    <span class="token keyword">this</span><span class="token punctuation">.</span>prop4 <span class="token operator">=</span> p4
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E0A\u9762\u53EF\u4EE5\u7B80\u5316\u6210\u5982\u4E0B\uFF0C\u6CE8\u610F\uFF0C\u4F7F\u7528\u8FD9\u79CD\u5F62\u5F0F\u65F6\uFF0C\u516C\u6709\u5C5E\u6027\u7684 public \u5173\u952E\u5B57\u4E0D\u80FD\u7701\u7565</span>
<span class="token keyword">class</span> <span class="token class-name">myClass</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>
    <span class="token keyword">public</span> prop1<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    <span class="token keyword">private</span> prop2<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    <span class="token keyword">protected</span> prop3<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    <span class="token keyword">public</span> <span class="token keyword">readonly</span> prop4<span class="token operator">:</span> <span class="token builtin">any</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="accessors" tabindex="-1">Accessors <a class="header-anchor" href="#accessors" aria-hidden="true">#</a></h3><p>TypeScript \u652F\u6301\u4EE5 getters/setters \u65B9\u5F0F\u6765\u62E6\u622A\u5BF9\u5BF9\u8C61\u5C5E\u6027\u7684\u8BBF\u95EE\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> passcode <span class="token operator">=</span> <span class="token string">&quot;secret passcode&quot;</span>

<span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> _fullName<span class="token operator">:</span> <span class="token builtin">string</span>

  <span class="token keyword">get</span> <span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_fullName
  <span class="token punctuation">}</span>

  <span class="token keyword">set</span> <span class="token function">fullName</span><span class="token punctuation">(</span>newName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>passcode <span class="token operator">&amp;&amp;</span> passcode <span class="token operator">===</span> <span class="token string">&quot;secret passcode&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_fullName <span class="token operator">=</span> newName
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Error: Unauthorized update of employee!&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> employee <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
employee<span class="token punctuation">.</span>fullName <span class="token operator">=</span> <span class="token string">&quot;Bob Smith&quot;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span>fullName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>employee<span class="token punctuation">.</span>fullName<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="static-properties" tabindex="-1">Static Properties <a class="header-anchor" href="#static-properties" aria-hidden="true">#</a></h3><p>\u9759\u6001\u6210\u5458\u53EA\u80FD\u901A\u8FC7\u7C7B(class)\u6765\u8BBF\u95EE\uFF0C\u4E0D\u80FD\u901A\u8FC7\u5B9E\u4F8B(instance)\u6765\u8BBF\u95EE:</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Grid</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> origin <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
  <span class="token function">calculateDistanceFromOrigin</span><span class="token punctuation">(</span>point<span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> xDist <span class="token operator">=</span> <span class="token punctuation">(</span>point<span class="token punctuation">.</span>x <span class="token operator">-</span> Grid<span class="token punctuation">.</span>origin<span class="token punctuation">.</span>x<span class="token punctuation">)</span>
    <span class="token keyword">let</span> yDist <span class="token operator">=</span> <span class="token punctuation">(</span>point<span class="token punctuation">.</span>y <span class="token operator">-</span> Grid<span class="token punctuation">.</span>origin<span class="token punctuation">.</span>y<span class="token punctuation">)</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>xDist <span class="token operator">*</span> xDist <span class="token operator">+</span> yDist <span class="token operator">*</span> yDist<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> scale<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> grid1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Grid</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span>  <span class="token comment">// 1x scale</span>
<span class="token keyword">let</span> grid2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Grid</span><span class="token punctuation">(</span><span class="token number">5.0</span><span class="token punctuation">)</span>  <span class="token comment">// 5x scale</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>grid1<span class="token punctuation">.</span><span class="token function">calculateDistanceFromOrigin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>grid2<span class="token punctuation">.</span><span class="token function">calculateDistanceFromOrigin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="abstract-classes" tabindex="-1">Abstract Classes <a class="header-anchor" href="#abstract-classes" aria-hidden="true">#</a></h3><p>\u62BD\u8C61\u7C7B\u901A\u5E38\u88AB\u7528\u6765\u7EE7\u627F\uFF0C\u800C\u4E0D\u80FD\u88AB\u5B9E\u4F8B\u5316\u3002\u4E0D\u540C\u4E8E\u63A5\u53E3\uFF0C\u63A5\u53E3\u4E2D\u4E0D\u80FD\u5305\u542B\u6210\u5458\u7684\u5B9E\u73B0\uFF0C\u800C\u62BD\u8C61\u7C7B\u53EF\u4EE5\u5305\u542B\u5B9E\u73B0\u3002\u62BD\u8C61\u7C7B\u4E2D\u53EF\u4EE5\u58F0\u660E\u62BD\u8C61\u65B9\u6CD5\uFF0C\u4F46\u662F\u4E0D\u80FD\u63D0\u4F9B\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF0C\u5FC5\u987B\u5728\u5176\u6D3E\u751F\u7C7B\u4E2D\u63D0\u4F9B\u5B9E\u73B0\u3002\u4F7F\u7528 <code>abstract</code> \u5173\u952E\u5B57\u6765\u5B9A\u4E49\u62BD\u8C61\u7C7B\u548C\u62BD\u8C61\u65B9\u6CD5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token keyword">abstract</span> <span class="token function">makeSound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token comment">// \u5FC5\u987B\u5728\u6D3E\u751F\u7C7B\u4E2D\u63D0\u4F9B\u5B9E\u73B0</span>
  <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;roaming the earth...&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">makeSound</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;wang!&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
  <span class="token function">feed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// error, \u62BD\u8C61\u7C7B\u4E0D\u80FD\u88AB\u5B9E\u4F8B\u5316</span>
<span class="token keyword">let</span> dog<span class="token operator">:</span> Animal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
dog<span class="token punctuation">.</span><span class="token function">makeSound</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
dog<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// ok</span>
dog<span class="token punctuation">.</span><span class="token function">feed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// error, \u62BD\u8C61\u7C7B\u4E2D\u4E0D\u5305\u542B feed \u65B9\u6CD5</span>
</code></pre></div><h3 id="using-a-class-as-an-interface" tabindex="-1">Using a class as an interface <a class="header-anchor" href="#using-a-class-as-an-interface" aria-hidden="true">#</a></h3><p>\u53EF\u4EE5\u628A\u7C7B\u5F53\u4F5C\u63A5\u53E3\u6765\u4F7F\u7528\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Point3d</span> <span class="token keyword">extends</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  z<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> point3d<span class="token operator">:</span> Point3d <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span>
</code></pre></div><h2 id="generics" tabindex="-1">Generics <a class="header-anchor" href="#generics" aria-hidden="true">#</a></h2><p>\u7B80\u5355\u7684\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">identity</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arg
<span class="token punctuation">}</span>

<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token generic-function"><span class="token function">identity</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token comment">// explicitly invoke  \u663E\u5F0F\u7684\u4F20\u5165\u7C7B\u578B\u53C2\u6570 T =&gt; number</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token generic-function"><span class="token function">identity</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span> <span class="token comment">// explicitly invoke  \u663E\u5F0F\u7684\u4F20\u5165\u7C7B\u578B\u53C2\u6570 T =&gt; string</span>
<span class="token keyword">let</span> strArr <span class="token operator">=</span> <span class="token function">identity</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// implicitly invoke  \u7F16\u8BD1\u5668\u81EA\u52A8\u63A8\u65AD\u51FA\u7C7B\u578B T =&gt; string[]</span>
</code></pre></div><p>\u6CE8\u610F\u5BF9\u4E8E generic function\uFF0C\u4E0D\u80FD\u5728\u51FD\u6570\u5185\u90E8\u628A\u7C7B\u578B\u53C2\u6570\u5F53\u4F5C\u67D0\u79CD\u5177\u4F53\u7684\u7C7B\u578B\u6765\u4F7F\u7528\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">loggingIdentity</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Error: \u65E0\u6CD5\u786E\u5B9A arg \u662F\u5426\u6709 length \u65B9\u6CD5\uFF0C\u56E0\u4E3A T \u53EF\u4EE5\u662F\u4EFB\u4F55\u7C7B\u578B</span>
  <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="generic-types" tabindex="-1">Generic Types <a class="header-anchor" href="#generic-types" aria-hidden="true">#</a></h3><p>\u4E0E\u666E\u901A\u51FD\u6570\u7C7B\u578B\u7C7B\u4F3C\uFF0C\u5728\u5199\u6CDB\u578B\u51FD\u6570\u7C7B\u578B\u7684 signature \u65F6\u8981\u52A0\u4E0A\u7C7B\u578B\u53C2\u6570\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">identity</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arg
<span class="token punctuation">}</span>
<span class="token keyword">let</span> myIdentity1<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span> <span class="token operator">=</span> identity

<span class="token comment">// \u4E5F\u53EF\u5C06\u6CDB\u578B\u51FD\u6570\u7C7B\u578B\u653E\u5230\u63A5\u53E3\u4E2D</span>
<span class="token keyword">interface</span> <span class="token class-name">GenericIdentityFn</span> <span class="token punctuation">{</span>
  <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> myIdentity2<span class="token operator">:</span> GenericIdentityFn <span class="token operator">=</span> identity

<span class="token comment">// \u66F4\u8FDB\u4E00\u6B65\uFF0C\u53EF\u4EE5\u628A\u7C7B\u578B\u53C2\u6570\u79FB\u5230\u63A5\u53E3\u4E0A\uFF0C\u4F7F\u63A5\u53E3\u5185\u7684\u5176\u5B83\u6210\u5458\u90FD\u80FD\u4F7F\u7528\u3002</span>
<span class="token comment">// \u4F46\u662F\u5728\u4F7F\u7528\u6CDB\u578B\u63A5\u53E3\u65F6\uFF0C\u9700\u8981\u4E3A\u7C7B\u578B\u53C2\u6570\u6307\u5B9A\u5177\u4F53\u7684\u7C7B\u578B</span>
<span class="token keyword">interface</span> <span class="token class-name">GenericInterface<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> myIdentity3<span class="token operator">:</span> GenericInterface<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> identity
</code></pre></div><h3 id="generic-classes" tabindex="-1">Generic Classes <a class="header-anchor" href="#generic-classes" aria-hidden="true">#</a></h3><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">GenericNumber<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  zeroValue<span class="token operator">:</span> <span class="token constant">T</span>
  <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>zeroValue <span class="token operator">=</span> val
    <span class="token keyword">this</span><span class="token punctuation">.</span>add <span class="token operator">=</span> fn
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> myGenericNumber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GenericNumber<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y<span class="token punctuation">)</span>
</code></pre></div><h3 id="generic-constraints" tabindex="-1">Generic Constraints <a class="header-anchor" href="#generic-constraints" aria-hidden="true">#</a></h3><p>\u524D\u9762\u8BF4\u8FC7\u6211\u4EEC\u4E0D\u80FD\u5728\u6CDB\u578B\u51FD\u6570\u5185\u90E8\u5C06\u6CDB\u578B\u7C7B\u578B\u53C2\u6570\u5F53\u4F5C\u67D0\u79CD\u5177\u4F53\u7684\u7C7B\u578B\u53BB\u4F7F\u7528\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">loggingIdentity</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Error: T doesn&#39;t have .length</span>
  <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F46\u662F\u5982\u679C\u6211\u4EEC\u9884\u5148\u77E5\u9053\u6211\u4EEC\u53EF\u80FD\u9700\u8981\u4F7F\u7528\u67D0\u4E9B\u5C5E\u6027\uFF0C\u540C\u65F6\u53C8\u60F3\u4FDD\u7559\u51FD\u6570\u7684\u6CDB\u578B\u7279\u6027\uFF0C\u8BE5\u5982\u4F55\u505A\u5462\uFF1F\u53EF\u4EE5\u5C06\u51FD\u6570\u7684\u6CDB\u578B\u7C7B\u578B\u53C2\u6570\u52A0\u4EE5\u9650\u5236\uFF0C\u9650\u5236\u4E3A\u5177\u6709\u67D0\u4E9B\u7279\u5B9A\u5C5E\u6027\u7684\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">constraintIdentityFn</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> length<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span>  <span class="token comment">// \u8FD9\u91CC\uFF0C\u7F16\u8BD1\u5668\u77E5\u9053\u4E86 arg \u6709 length \u5C5E\u6027\uFF0C\u6240\u4EE5\u4F1A\u901A\u8FC7\u68C0\u67E5</span>
  <span class="token keyword">return</span> arg
<span class="token punctuation">}</span>

<span class="token comment">// \u6216\u8005\u4F7F\u7528\u4E00\u4E2A\u63A5\u53E3\u6765\u63CF\u8FF0\u9650\u5236</span>
<span class="token keyword">interface</span> <span class="token class-name">ConstraintInterface</span> <span class="token punctuation">{</span>
  length<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">constraintIdentityFn</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> ConstraintInterface<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
  <span class="token keyword">return</span> arg
<span class="token punctuation">}</span>

<span class="token function">constraintIdentityFn</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment">// Error: Number does not have a .length property</span>
<span class="token function">constraintIdentityFn</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Ok</span>
<span class="token function">constraintIdentityFn</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> length<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// Ok</span>
</code></pre></div><p>\u53EF\u4EE5\u58F0\u660E\u4E00\u4E2A\u7C7B\u578B\u53C2\u6570\uFF0C\u540C\u65F6\u8BA9\u5B83\u53D7\u9650\u4E8E\u53E6\u5916\u4E00\u4E2A\u7C7B\u578B\u53C2\u6570</p><div class="language-ts"><pre><code><span class="token comment">// \u8FD9\u91CC\u7C7B\u578B K \u88AB\u7C7B\u578B T \u7684 key \u9650\u5236</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getProperty</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token punctuation">{</span>a<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>b<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token punctuation">{</span>a<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>b<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
<span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token punctuation">{</span>a<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>b<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// error</span>
</code></pre></div><h2 id="enums" tabindex="-1">Enums <a class="header-anchor" href="#enums" aria-hidden="true">#</a></h2><p>\u679A\u4E3E\u8BA9\u6211\u4EEC\u53EF\u4EE5\u5B9A\u4E49\u4E00\u7EC4\u540D\u547D\u7684\u5E38\u91CF\uFF0CTypeScript \u652F\u6301\u6570\u503C\u548C\u5B57\u7B26\u4E32\u679A\u4E3E\u3002</p><h3 id="numeric-enums" tabindex="-1">Numeric enums <a class="header-anchor" href="#numeric-enums" aria-hidden="true">#</a></h3><div class="language-ts"><pre><code><span class="token keyword">enum</span> Direction <span class="token punctuation">{</span>
  Up<span class="token punctuation">,</span> <span class="token comment">// \u9ED8\u8BA4\u521D\u59CB\u5316\u4E3A 0\uFF0C\u5176\u540E\u4F9D\u6B21\u9012\u589E1</span>
  Down<span class="token punctuation">,</span> <span class="token comment">// 1</span>
  Left<span class="token punctuation">,</span> <span class="token comment">// 2</span>
  Right <span class="token comment">// 3</span>
<span class="token punctuation">}</span>

<span class="token keyword">enum</span> Direction <span class="token punctuation">{</span>
  Up <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// \u521D\u59CB\u5316\u4E3A1\uFF0C\u5176\u540E\u4F9D\u6B21\u9012\u589E1</span>
  Down<span class="token punctuation">,</span> <span class="token comment">// 2</span>
  Left<span class="token punctuation">,</span> <span class="token comment">// 3</span>
  Right <span class="token comment">// 4</span>
<span class="token punctuation">}</span>

<span class="token keyword">enum</span> Direction <span class="token punctuation">{</span>
  Up <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>
  Down<span class="token punctuation">,</span> <span class="token comment">// 4</span>
  Left <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span>
  Right <span class="token comment">// 9</span>
<span class="token punctuation">}</span>

<span class="token keyword">enum</span> Direction <span class="token punctuation">{</span>
  Up <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>
  Down<span class="token punctuation">,</span> <span class="token comment">// 4</span>
  Left <span class="token operator">=</span> Up<span class="token punctuation">,</span> <span class="token comment">// 3</span>
  Right <span class="token comment">// 4</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6CE8\u610F\uFF0C\u6570\u503C\u578B\u679A\u4E3E\u7684\u6CA1\u6709\u88AB\u521D\u59CB\u5316\u7684\u6210\u5458\u8981\u4E48\u5904\u4E8E\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u8981\u4E48\u7D27\u8DDF\u5728\u88AB\u6570\u503C\u5E38\u91CF(numeric constant)\u521D\u59CB\u5316\u8FC7\u7684\u6210\u5458\u6216\u88AB\u5176\u5B83\u5E38\u91CF\u679A\u4E3E\u6210\u5458\u521D\u59CB\u5316\u8FC7\u7684\u6210\u5458\u540E\u9762\u3002\u4E5F\u5C31\u662F\u8BF4\u4E0B\u9762\u7684\u4F8B\u5B50\u662F\u4E0D\u5141\u8BB8\u7684\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> notOK <span class="token punctuation">{</span>
  <span class="token constant">A</span> <span class="token operator">=</span> <span class="token function">getSomeValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token constant">B</span> <span class="token comment">// error, A \u6CA1\u6709\u88AB\u5E38\u91CF\u521D\u59CB\u5316\uFF0C\u6240\u4EE5 B \u9700\u8981\u4E00\u4E2A\u521D\u59CB\u5316\u5668</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F7F\u7528\u679A\u4E3E\u975E\u5E38\u7B80\u5355\uFF0C\u53EF\u4EE5\u50CF\u8BBF\u95EE\u5BF9\u8C61\u5C5E\u6027\u4E00\u6837\u76F4\u63A5\u8BBF\u95EE\u679A\u4E3E\u7684\u6210\u5458:</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> Response <span class="token punctuation">{</span>
  No<span class="token punctuation">,</span>
  Yes
<span class="token punctuation">}</span>
<span class="token keyword">let</span> answer<span class="token operator">:</span> Response <span class="token operator">=</span> Response<span class="token punctuation">.</span>No

<span class="token keyword">function</span> <span class="token function">respond</span><span class="token punctuation">(</span>recipient<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> message<span class="token operator">:</span> Response<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token function">respond</span><span class="token punctuation">(</span><span class="token string">&#39;Princess Caroline&#39;</span><span class="token punctuation">,</span> Response<span class="token punctuation">.</span>Yes<span class="token punctuation">)</span>
</code></pre></div><h3 id="string-enums" tabindex="-1">String enums <a class="header-anchor" href="#string-enums" aria-hidden="true">#</a></h3><p>\u5B57\u7B26\u4E32\u679A\u4E3E\u7684\u6BCF\u4E2A\u6210\u5458\u90FD\u5FC5\u987B\u88AB\u521D\u59CB\u5316\uFF0C\u8981\u4E48\u88AB\u5E38\u91CF\u521D\u59CB\u5316\uFF0C\u8981\u4E48\u88AB\u5176\u5B83\u6210\u5458\u521D\u59CB\u5316\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> Direction <span class="token punctuation">{</span>
  Up <span class="token operator">=</span> <span class="token string">&#39;North&#39;</span><span class="token punctuation">,</span>
  Down <span class="token operator">=</span> <span class="token string">&#39;South&#39;</span><span class="token punctuation">,</span>
  Left <span class="token operator">=</span> <span class="token string">&#39;West&#39;</span><span class="token punctuation">,</span>
  Right <span class="token operator">=</span> <span class="token string">&#39;East&#39;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="heterogeneous-enums" tabindex="-1">Heterogeneous enums <a class="header-anchor" href="#heterogeneous-enums" aria-hidden="true">#</a></h3><p>TypeScript \u652F\u6301\uFF0C\u4F46\u662F\u4E0D\u5EFA\u8BAE\u7528\u8FD9\u6837\u7684\u679A\u4E3E</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> BooleanLikeHeterogeneousEnum <span class="token punctuation">{</span>
    No <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    Yes <span class="token operator">=</span> <span class="token string">&quot;YES&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="computed-and-constant-members" tabindex="-1">Computed and constant members <a class="header-anchor" href="#computed-and-constant-members" aria-hidden="true">#</a></h3><p>\u679A\u4E3E\u7684\u6BCF\u4E2A\u6210\u5458\u8981\u4E48\u662F constant\uFF0C\u8981\u4E48\u662F computed\u3002</p><p>\u6EE1\u8DB3\u4EE5\u4E0B\u6761\u4EF6\u4E4B\u4E00\u7684\u6210\u5458\u662F constant \u6210\u5458\uFF1A</p><ul><li>\u662F\u679A\u4E3E\u7684\u7B2C\u4E00\u4E2A\u6210\u5458\uFF0C\u4E14\u6CA1\u6709\u88AB\u521D\u59CB\u5316\u3002\u6B64\u65F6\u9ED8\u8BA4\u4E3A\u5E38\u91CF1</li><li>\u6CA1\u6709\u88AB\u521D\u59CB\u5316\uFF0C\u4F46\u662F\u8DDF\u5728\u6570\u503C\u6210\u5458\u7684\u540E\u9762\u3002 \u6B64\u65F6\u9ED8\u8BA4\u503C\u662F\u524D\u9762\u6210\u5458\u7684\u503C\u52A01</li><li>\u88AB\u5E38\u91CF\u679A\u4E3E\u8868\u8FBE\u5F0F(constant enum expression)\u521D\u59CB\u5316\u3002\u5173\u4E8E\u5E38\u91CF\u679A\u4E3E\u8868\u8FBE\u5F0F\uFF0C\u8BF7\u770B<a href="http://www.typescriptlang.org/docs/handbook/enums.html" target="_blank" rel="noopener noreferrer">\u5B98\u65B9\u6587\u6863</a>\u3002</li></ul><p>\u9664\u6B64\u4E4B\u5916\u5176\u5B83\u6240\u6709\u6210\u5458\u88AB\u8BA4\u4E3A\u662F computed \u6210\u5458\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> myEnum <span class="token punctuation">{</span>
  <span class="token comment">// constant members</span>
  <span class="token constant">A</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// numeric literal</span>
  <span class="token constant">B</span><span class="token punctuation">,</span> <span class="token comment">// follow a numeric constant member</span>
  <span class="token constant">C</span> <span class="token operator">=</span> <span class="token constant">B</span><span class="token punctuation">,</span>  <span class="token comment">// reference to previously defined constant member</span>
  <span class="token constant">D</span> <span class="token operator">=</span> AnotherEnum<span class="token punctuation">.</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token comment">// reference to previously defined constant member from a different enum</span>
  <span class="token constant">E</span> <span class="token operator">=</span> <span class="token constant">A</span> <span class="token operator">+</span> <span class="token constant">D</span><span class="token punctuation">,</span> <span class="token comment">// +, -, *, /, % ... operators with constant member as operands</span>

  <span class="token comment">// computed member</span>
  <span class="token constant">F</span> <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">.</span>length
<span class="token punctuation">}</span>
</code></pre></div><h3 id="union-enums-and-enum-member-types" tabindex="-1"><span id="des">Union enums and enum member types</span> <a class="header-anchor" href="#union-enums-and-enum-member-types" aria-hidden="true">#</a></h3><p>There is a special subset of constant enum member that aren&#39;t calculated: literal enum members. A literal enum member is a constant enum member with no initialized value, or with values that are initialized to</p><ul><li>any string literal (e.g. <code>&#39;foo&#39;, &#39;bar&#39;, &#39;baz&#39;</code>)</li><li>any numeric literal (e.g. <code>1, 100</code>)</li><li>a unary minus applied to any numeric literal (e.g. <code>-1, -100</code>)</li></ul><p>When all members in an enum have literal enum values, some special semantics come to play.</p><p>\u9996\u5148\u5C31\u662F\u679A\u4E3E\u6210\u5458\u4E5F\u53EF\u4EE5\u5F53\u4F5C\u7C7B\u578B\u6765\u4F7F\u7528\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> ShapeKind <span class="token punctuation">{</span> Circle<span class="token punctuation">,</span> Square <span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> ShapeKind<span class="token punctuation">.</span>Circle
  radius<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Square</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> ShapeKind<span class="token punctuation">.</span>Square
  sideLength<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> c<span class="token operator">:</span> Circle <span class="token operator">=</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> ShapeKind<span class="token punctuation">.</span>Square<span class="token punctuation">,</span> <span class="token comment">// error</span>
  radius<span class="token operator">:</span> <span class="token number">100</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u6837\u7684\u8BDD\uFF0C\u679A\u4E3E\u672C\u8EAB\u53EF\u4EE5\u770B\u6210\u662F\u5B83\u7684\u6240\u6709\u6210\u5458\u7C7B\u578B\u7684\u4E00\u4E2A\u8054\u5408\u7C7B\u578B(union type)\uFF0C\u800C TypeScript \u7684\u7C7B\u578B\u7CFB\u7EDF\u53EF\u4EE5\u6839\u636E\u8FD9\u4E2A\u8054\u5408\u7C7B\u578B\u6765\u5E2E\u4F60\u6355\u6349\u5982\u4E0B\u4EE3\u7801\u4E2D bug\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> <span class="token constant">E</span> <span class="token punctuation">{</span> Foo<span class="token punctuation">,</span> Bar <span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">E</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">!==</span> <span class="token constant">E</span><span class="token punctuation">.</span>Foo <span class="token operator">||</span> x <span class="token operator">!==</span> <span class="token constant">E</span><span class="token punctuation">.</span>Bar<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Error, \u56E0\u4E3A\u7F16\u8BD1\u5668\u77E5\u9053\u8FD9\u91CC if \u6761\u4EF6\u5C06\u6C38\u8FDC\u4E3A true\uFF0C\u6240\u4EE5\u62A5\u9519</span>
    <span class="token comment">//...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="enums-at-runtime" tabindex="-1">enums at runtime <a class="header-anchor" href="#enums-at-runtime" aria-hidden="true">#</a></h3><p>\u5728\u8FD0\u884C\u65F6\u9636\u6BB5\uFF0C\u679A\u4E3E\u5B9E\u9645\u4E0A\u5C31\u662F\u4E00\u4E2A\u5BF9\u8C61(\u67E5\u770B\u7F16\u8BD1\u751F\u6210\u7684 js \u4EE3\u7801\u5373\u53EF\u77E5)\uFF0C\u56E0\u6B64\u4E0B\u9762\u7684\u4EE3\u7801\u53EF\u884C\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> <span class="token constant">E</span> <span class="token punctuation">{</span> Foo<span class="token punctuation">,</span> Bar <span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token punctuation">{</span>Foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">.</span>Foo
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token constant">E</span><span class="token punctuation">)</span> <span class="token comment">// Works\uFF0C\u56E0\u4E3A E \u6709\u5C5E\u6027 &#39;Foo&#39;\uFF0C\u4E14\u7C7B\u578B\u4E3A number</span>
</code></pre></div><h3 id="reverse-mappings" tabindex="-1">Reverse mappings <a class="header-anchor" href="#reverse-mappings" aria-hidden="true">#</a></h3><p>\u6570\u503C\u578B\u679A\u4E3E\u53EF\u4EE5\u9006\u5411\u6620\u5C04\uFF0C\u4ECE\u679A\u4E3E\u503C\u6620\u5C04\u5230\u679A\u4E3E\u540D\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> <span class="token constant">E</span> <span class="token punctuation">{</span> Foo<span class="token punctuation">,</span> Bar <span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">E</span><span class="token punctuation">[</span><span class="token constant">E</span><span class="token punctuation">.</span>Foo<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// &#39;Foo&#39;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">E</span><span class="token punctuation">[</span><span class="token constant">E</span><span class="token punctuation">.</span>Bar<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// &#39;Bar&#39;</span>
</code></pre></div><p>\u5B57\u7B26\u4E32\u578B\u679A\u4E3E\u4E0D\u80FD\u9006\u5411\u6620\u5C04\u3002</p><h3 id="const-enums" tabindex="-1"><i style="color:red;">const</i> enums <a class="header-anchor" href="#const-enums" aria-hidden="true">#</a></h3><p>\u5E38\u91CF\u679A\u4E3E\u7684\u6210\u5458\u53EA\u80FD\u4F7F\u7528\u5E38\u91CF\u679A\u4E3E\u8868\u8FBE\u5F0F\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u4E0E\u666E\u901A\u679A\u4E3E\u4E0D\u540C\uFF0C\u5E38\u91CF\u679A\u4E3E\u5728\u7F16\u8BD1\u671F\u95F4\u88AB\u5B8C\u5168\u79FB\u9664\uFF0C\u4E0D\u4F1A\u751F\u6210\u5BF9\u5E94\u7684 js \u4EE3\u7801\uFF0C\u5E38\u91CF\u679A\u4E3E\u6210\u5458\u5728\u88AB\u5F15\u7528\u70B9\u4F1A\u88AB\u76F4\u63A5\u66FF\u6362\u6210\u5BF9\u5E94\u7684\u503C\uFF0C\u56E0\u6B64\uFF0C\u5E38\u91CF\u679A\u4E3E\u4E0D\u80FD\u6709\u8BA1\u7B97\u6210\u5458\u3002\u5E38\u91CF\u679A\u4E3E\u4F7F\u7528\u5173\u952E\u5B57 <code>const</code> \u6765\u5B9A\u4E49\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token keyword">enum</span> Directions <span class="token punctuation">{</span>
    Up<span class="token punctuation">,</span>
    Down<span class="token punctuation">,</span>
    Left<span class="token punctuation">,</span>
    Right
<span class="token punctuation">}</span>

<span class="token keyword">let</span> directions <span class="token operator">=</span> <span class="token punctuation">[</span>Directions<span class="token punctuation">.</span>Up<span class="token punctuation">,</span> Directions<span class="token punctuation">.</span>Down<span class="token punctuation">,</span> Directions<span class="token punctuation">.</span>Left<span class="token punctuation">,</span> Directions<span class="token punctuation">.</span>Right<span class="token punctuation">]</span>
</code></pre></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u7F16\u8BD1\u540E\u751F\u6210\u7684 js \u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">var</span> directions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token comment">/* Up */</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token comment">/* Down */</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token comment">/* Left */</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token comment">/* Right */</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="ambient-enums" tabindex="-1">Ambient enums <a class="header-anchor" href="#ambient-enums" aria-hidden="true">#</a></h3><h2 id="type-inference" tabindex="-1">Type Inference <a class="header-anchor" href="#type-inference" aria-hidden="true">#</a></h2><h3 id="basic" tabindex="-1">Basic <a class="header-anchor" href="#basic" aria-hidden="true">#</a></h3><p>\u5728\u67D0\u4E9B\u5730\u65B9(\u53D8\u91CF\u521D\u59CB\u5316\u3001\u5BF9\u8C61\u6210\u5458\u521D\u59CB\u5316\u3001\u51FD\u6570\u9ED8\u8BA4\u53C2\u6570\u521D\u59CB\u5316\u3001\u51FD\u6570\u8FD4\u56DE\u503C)\u5982\u679C\u6CA1\u6709\u663E\u5F0F\u63D0\u4F9B\u7C7B\u578B\u58F0\u660E\uFF0CTypeScript \u4F1A\u8FDB\u884C\u7C7B\u578B\u63A8\u65AD\u7ED9\u51FA\u7C7B\u578B\u4FE1\u606F\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">3</span> <span class="token comment">// \u53D8\u91CF x \u88AB\u63A8\u65AD\u51FA\u7C7B\u578B\u4E3A number</span>

<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token string">&#39;default Value&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// f \u7684\u53C2\u6570 a \u88AB\u63A8\u65AD\u51FA\u7C7B\u578B\u4E3A string\uFF0C\u8FD4\u56DE\u7C7B\u578B\u88AB\u63A8\u65AD\u4E3A number</span>
  <span class="token keyword">return</span> a<span class="token punctuation">.</span>length
<span class="token punctuation">}</span>
</code></pre></div><h3 id="best-common-type" tabindex="-1">Best common type <a class="header-anchor" href="#best-common-type" aria-hidden="true">#</a></h3><p>\u5F53\u7C7B\u578B\u63A8\u65AD\u9700\u8981\u5728\u591A\u4E2A\u8868\u8FBE\u5F0F\u4E2D\u8FDB\u884C\u65F6\uFF0CTypeScript \u4F1A\u5728\u6240\u6709\u5019\u9009\u7C7B\u578B\u4E2D\u9009\u51FA\u4E00\u4E2A\u6700\u516C\u5171\u7684\u7C7B\u578B\u6765\u4F5C\u4E3A\u63A8\u65AD\u7ED3\u679C\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">]</span> <span class="token comment">// x \u7684\u7C7B\u578B\u88AB\u63A8\u65AD\u4E3A\uFF1A (number | null)[]</span>

<span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// y \u7684\u7C7B\u578B\u88AB\u63A8\u65AD\u4E3A (Dog | Cat)[]</span>
<span class="token keyword">let</span> z <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// z \u7684\u7C7B\u578B\u88AB\u63A8\u65AD\u4E3A Animal[]</span>
</code></pre></div><p>\u4E3A\u4E86\u63A8\u65AD <code>x, y, z</code> \u7684\u7C7B\u578B\uFF0C\u5FC5\u987B\u8981\u8003\u8651\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u5143\u7D20\u7684\u7C7B\u578B\uFF0CTypeScript \u4F1A\u901A\u8FC7\u6700\u4F18\u516C\u5171\u7C7B\u578B\u7B97\u6CD5(the best common type algorithm)\u627E\u51FA\u4E0E\u5176\u5B83\u6240\u6709\u7C7B\u578B\u90FD\u517C\u5BB9\u7684\u7C7B\u578B\u4F5C\u4E3A\u6700\u7EC8\u63A8\u65AD\u7ED3\u679C\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u8FD9\u6837\u7684\u7C7B\u578B\uFF0CTypeScript \u4F1A\u5C06\u5176\u63A8\u65AD\u4E3A\u8054\u5408\u7C7B\u578B(union type)\u3002</p><h3 id="contextual-typing" tabindex="-1">Contextual Typing <a class="header-anchor" href="#contextual-typing" aria-hidden="true">#</a></h3><div class="language-ts"><pre><code>window<span class="token punctuation">.</span><span class="token function-variable function">onmousedown</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>mouseEvent<span class="token punctuation">)</span><span class="token punctuation">{</span>
  mouseEvent<span class="token punctuation">.</span>button <span class="token comment">// ok</span>
  mouseEvent<span class="token punctuation">.</span>haha <span class="token comment">// error</span>
<span class="token punctuation">}</span>
</code></pre></div><p>TypeScript \u80FD\u6839\u636E\u8D4B\u503C\u8FD0\u7B97\u7B26\u5DE6\u8FB9\u7684\u7C7B\u578B\u63A8\u65AD\u53F3\u8FB9\u7684\u7C7B\u578B\uFF0C\u4E0A\u9762\u6839\u636E <code>window.onmousedown</code> \u63A8\u65AD\u51FA\u53C2\u6570 <code>mouseEvent</code> \u7684\u7C7B\u578B\uFF0C\u8BBF\u95EE\u4E0D\u5B58\u5728\u4E8E <code>mouseEvent</code> \u4E2D\u7684\u5C5E\u6027\u5C31\u4F1A\u62A5\u9519\u3002</p><h2 id="type-compatibility" tabindex="-1">Type Compatibility <a class="header-anchor" href="#type-compatibility" aria-hidden="true">#</a></h2><h3 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h3><p>TypeScript \u4E2D\u7684\u7C7B\u578B\u517C\u5BB9\u6027\u662F\u57FA\u4E8E\u7ED3\u6784\u5B50\u7C7B\u578B(structural subtyping)\u7684\uFF0C\u4E00\u79CD\u7C7B\u578B\u4E0E\u53E6\u4E00\u79CD\u7C7B\u578B\u517C\u5BB9\u53EA\u9700\u8981\u5B83\u4EEC\u7684\u5404\u4E2A\u6210\u5458\u90FD\u517C\u5BB9\u5373\u53EF\uFF1A</p><div class="language-ts"><pre><code> <span class="token keyword">interface</span> <span class="token class-name">Named</span> <span class="token punctuation">{</span>
   name<span class="token operator">:</span> <span class="token builtin">string</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
   name<span class="token operator">:</span> <span class="token builtin">string</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">let</span> p<span class="token operator">:</span> Named <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
</code></pre></div><p>TypeScript \u7684\u7ED3\u6784\u5316\u7C7B\u578B\u7CFB\u7EDF\u7684\u57FA\u672C\u89C4\u5219\u662F\uFF1A\u5982\u679C <code>y</code> \u5177\u6709\u81F3\u5C11\u4E0E <code>x</code> \u5B8C\u5168\u76F8\u540C\u7684\u6210\u5458\uFF0C\u5219 <code>x</code> \u4E0E <code>y</code> \u517C\u5BB9\u3002\u4F8B\u5982\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">X</span></span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> x<span class="token operator">:</span> <span class="token constant">X</span>
<span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Nicholas&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">27</span> <span class="token punctuation">}</span> <span class="token comment">// y \u7684\u63A8\u65AD\u7C7B\u578B\u4E3A\uFF1A{name: string, age: number}</span>
x <span class="token operator">=</span> y <span class="token comment">// ok, y \u5305\u542B\u81F3\u5C11\u4E0E x \u5B8C\u5168\u76F8\u540C\u7684\u6210\u5458</span>
</code></pre></div><p><code>y</code> \u662F\u5426\u80FD\u8D4B\u503C\u7ED9 <code>x</code>\uFF0C\u7F16\u8BD1\u5668\u4F1A\u53BB\u68C0\u67E5 <code>x</code> \u7684\u6BCF\u4E00\u4E2A\u6210\u5458\u662F\u5426\u90FD\u80FD\u5728 <code>y</code> \u4E2D\u627E\u5230\u5B8C\u5168\u517C\u5BB9\u7684\u4E00\u4E2A\u6210\u5458\u4E0E\u4E4B\u5BF9\u5E94\u3002</p><p>\u540C\u6837\u7684\u8D4B\u503C\u64CD\u4F5C\u68C0\u67E5\u4E5F\u53D1\u751F\u5728\u51FD\u6570\u8C03\u7528\u4F20\u53C2\u65F6\uFF0C\u63A5\u7740\u4E0A\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">X</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token comment">// ok</span>
</code></pre></div><h3 id="functions-1" tabindex="-1">Functions <a class="header-anchor" href="#functions-1" aria-hidden="true">#</a></h3><h4 id="\u51FD\u6570\u53C2\u6570\u7684\u517C\u5BB9\u6027" tabindex="-1">\u51FD\u6570\u53C2\u6570\u7684\u517C\u5BB9\u6027 <a class="header-anchor" href="#\u51FD\u6570\u53C2\u6570\u7684\u517C\u5BB9\u6027" aria-hidden="true">#</a></h4><p>\u539F\u59CB\u7C7B\u578B\u4EE5\u53CA\u5BF9\u8C61\u7C7B\u578B\u4E4B\u95F4\u7684\u517C\u5BB9\u6027\u662F\u5F88\u76F4\u89C2\u7684\uFF0C\u4F46\u662F\u4E24\u4E2A\u51FD\u6570\u7684\u517C\u5BB9\u6027\u5C31\u6709\u70B9\u590D\u6742\u4E86\u3002\u5148\u770B\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\uFF0C\u4E24\u4E2A\u4EC5\u53C2\u6570\u5217\u8868\u4E0D\u76F8\u540C\u7684\u51FD\u6570\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">x</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">0</span>   <span class="token comment">// x \u7684\u7C7B\u578B\u88AB\u63A8\u65AD\u4E3A (a: number) =&gt; number</span>
<span class="token keyword">let</span> <span class="token function-variable function">y</span> <span class="token operator">=</span> <span class="token punctuation">(</span>b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">0</span>  <span class="token comment">// y \u7684\u7C7B\u578B\u88AB\u63A8\u65AD\u4E3A (b: number, c: string) =&gt; number</span>

y <span class="token operator">=</span> x <span class="token comment">// ok</span>
x <span class="token operator">=</span> y <span class="token comment">// error</span>
</code></pre></div><p>\u7F16\u8BD1\u5668\u5728\u68C0\u67E5 <code>x</code> \u662F\u5426\u80FD\u8D4B\u503C\u7ED9 <code>y</code> \u65F6\uFF0C\u9996\u5148\u68C0\u67E5\u51FD\u6570\u7684\u53C2\u6570\u5217\u8868\uFF0C <code>x</code> \u7684\u6BCF\u4E00\u4E2A\u53C2\u6570\u90FD\u5FC5\u987B\u5728 <code>y</code> \u4E2D\u6709\u5BF9\u5E94\u7684\u4E0E\u4E4B\u517C\u5BB9\u7684\u53C2\u6570(\u540D\u79F0\u53EF\u4EE5\u4E0D\u540C\uFF0C\u4F46\u662F\u7C7B\u578B\u548C\u51FA\u73B0\u7684\u4F4D\u7F6E\u5FC5\u987B\u76F8\u540C)\uFF0C\u624D\u80FD\u901A\u8FC7\u68C0\u67E5\u3002\u6240\u4EE5\u4E0A\u9762\u5141\u8BB8 <code>y = x</code> \uFF0C\u4E0D\u5141\u8BB8 <code>x = y</code>\u3002</p><p>\u8FD9\u770B\u8D77\u6765\u597D\u50CF\u4E0E\u5BF9\u8C61\u7C7B\u578B\u7684\u517C\u5BB9\u6027\u68C0\u67E5\u89C4\u5219\u6B63\u597D\u76F8\u53CD\uFF0C\u4F46\u8FD9\u5728 JavaScript \u4E2D\u662F\u5F88\u5E38\u89C1\u7684\uFF0C\u51FD\u6570\u53EF\u4EE5\u5FFD\u7565\u989D\u5916\u7684\u51FD\u6570\u53C2\u6570\uFF0C\u901A\u8FC7\u67E5\u770B\u7F16\u8BD1\u751F\u6210\u7684 js \u4EE3\u7801\u5C31\u5BB9\u6613\u7406\u89E3\u4E86\u3002</p><h4 id="\u8FD4\u56DE\u7C7B\u578B\u7684\u517C\u5BB9\u6027" tabindex="-1">\u8FD4\u56DE\u7C7B\u578B\u7684\u517C\u5BB9\u6027 <a class="header-anchor" href="#\u8FD4\u56DE\u7C7B\u578B\u7684\u517C\u5BB9\u6027" aria-hidden="true">#</a></h4><p>\u7136\u540E\u6765\u770B\u9488\u5BF9\u8FD4\u56DE\u7C7B\u578B\u7684\u68C0\u67E5\uFF0C\u4E24\u4E2A\u4EC5\u8FD4\u56DE\u7C7B\u578B\u4E0D\u540C\u7684\u4E24\u4E2A\u51FD\u6570\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">x</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Alice&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// x \u7684\u7C7B\u578B\u88AB\u63A8\u65AD\u4E3A () =&gt; {name: string}</span>
<span class="token keyword">let</span> <span class="token function-variable function">y</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Nicholas&#39;</span><span class="token punctuation">,</span> location<span class="token operator">:</span> <span class="token string">&#39;China&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// y \u7684\u7C7B\u578B\u88AB\u63A8\u65AD\u4E3A () =&gt; {name: string, location: string}</span>

x <span class="token operator">=</span> y <span class="token comment">// ok</span>
y <span class="token operator">=</span> x <span class="token comment">// error: x \u7684\u8FD4\u56DE\u7C7B\u578B\u7F3A\u5C11 location \u5C5E\u6027</span>
</code></pre></div><p>TypeScript \u8981\u6C42 source function \u7684\u8FD4\u56DE\u7C7B\u578B\u5FC5\u987B\u662F target function \u7684\u8FD4\u56DE\u7C7B\u578B\u7684\u5B50\u7C7B\u578B\uFF0C\u8D4B\u503C\u624D\u88AB\u5141\u8BB8\u3002</p><h4 id="function-parameter-bivariance" tabindex="-1">Function Parameter Bivariance <a class="header-anchor" href="#function-parameter-bivariance" aria-hidden="true">#</a></h4><p>\u524D\u9762\u8BF4\u5230\uFF0C\u51FD\u6570\u5728\u8D4B\u503C\u65F6\u8FDB\u884C\u53C2\u6570\u7C7B\u578B\u68C0\u67E5\uFF0C\u5982\u679C\u628A\u51FD\u6570\u7684\u53C2\u6570\u5217\u8868\u770B\u4F5C\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u90A3\u4E48\u76EE\u6807\u51FD\u6570\u7684\u53C2\u6570\u5217\u8868\u5FC5\u987B\u662F\u6E90\u51FD\u6570\u7684\u53C2\u6570\u5217\u8868\u7684\u5B50\u7C7B\u578B\uFF0C\u8D4B\u503C\u624D\u88AB\u5141\u8BB8\u3002\u90A3\u4E48\u5C31\u4F1A\u51FA\u73B0\u5982\u4E0B\u8FD9\u79CD\u5F88\u5E38\u89C1\u4E14\u5408\u7406\u7684\u9700\u6C42\uFF0C\u4F46\u662F\u65E0\u6CD5\u901A\u8FC7\u7C7B\u578B\u68C0\u67E5\u7684\u60C5\u51B5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> EventType <span class="token punctuation">{</span> Mouse<span class="token punctuation">,</span> KeyBoard <span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Event</span> <span class="token punctuation">{</span> timestamp<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">MSEvent</span> <span class="token keyword">extends</span> <span class="token class-name">Event</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">KBEvent</span> <span class="token keyword">extends</span> <span class="token class-name">Event</span> <span class="token punctuation">{</span> keyCode<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">listenEvent</span><span class="token punctuation">(</span>eventType<span class="token operator">:</span> EventType<span class="token punctuation">,</span> <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token punctuation">(</span>n<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

<span class="token comment">// \u8FD9\u91CC listenEvent \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F1A\u51FA\u73B0\u51FD\u6570\u8D4B\u503C\u7684\u60C5\u51B5\uFF0C</span>
<span class="token comment">// \u76EE\u6807\u51FD\u6570\u7684\u53C2\u6570\u5217\u8868\u7C7B\u578B\u53EF\u4EE5\u770B\u4F5C\u4E3A Event\uFF0C\u6E90\u51FD\u6570\u7684\u53C2\u6570\u5217\u8868\u7C7B\u578B\u770B\u4F5C\u4E3A MSEvent\uFF0C</span>
<span class="token comment">// \u56E0\u4E3A\u76EE\u6807\u53C2\u6570\u7C7B\u578B\u4E0D\u662F\u6E90\u53C2\u6570\u7C7B\u578B\u7684\u5B50\u7C7B\u578B\uFF0C\u6240\u4EE5\u8D4B\u503C\u4E0D\u88AB\u5141\u8BB8\u3002</span>
<span class="token comment">// \u4F46\u662F\u5355\u4ECE\u51FD\u6570\u7684\u8C03\u7528\u4E0A\u6765\u770B\uFF0C\u8FD9\u79CD\u9700\u6C42\u53C8\u662F\u5408\u7406\u7684\uFF0C\u56E0\u4E3A MSEvent \u662F Event \u7684\u5B50\u7C7B\u3002</span>
<span class="token function">listenEvent</span><span class="token punctuation">(</span>EventType<span class="token punctuation">.</span>Mouse<span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> MSEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>x<span class="token punctuation">,</span> e<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// error</span>

<span class="token comment">// \u4F46\u662F\u53EF\u4EE5\u6709\u5982\u4E0B\u4E0D\u592A\u7406\u60F3\u7684\u66FF\u4EE3\u65B9\u6848</span>
<span class="token function">listenEvent</span><span class="token punctuation">(</span>EventType<span class="token punctuation">.</span>Mouse<span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MSEvent<span class="token operator">&gt;</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>MSEvent<span class="token operator">&gt;</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token function">listenEvent</span><span class="token punctuation">(</span>EventType<span class="token punctuation">.</span>Mouse<span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span>e<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">:</span> MSEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>x<span class="token punctuation">,</span> e<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre></div><h4 id="optional-parameters-and-rest-parameters" tabindex="-1">Optional Parameters and Rest Parameters <a class="header-anchor" href="#optional-parameters-and-rest-parameters" aria-hidden="true">#</a></h4><p>\u5728\u6BD4\u8F83\u51FD\u6570\u7684\u517C\u5BB9\u6027\u65F6\uFF0C\u5BF9 optional parameters \u548C rest parameters \u4F1A\u505A\u76F8\u540C\u7684\u5904\u7406\uFF0C\u5982\u679C\u4E00\u4E2A\u51FD\u6570\u5177\u6709 rest parameter\uFF0C\u4F1A\u88AB\u5F53\u4F5C\u4E3A\u5177\u6709\u65E0\u9650\u591A\u4E2A optional parameter \u7684\u51FD\u6570\u6765\u5904\u7406\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">f1</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> b<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token function-variable function">f2</span> <span class="token operator">=</span> <span class="token punctuation">(</span>c<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> d<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> e<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token function-variable function">f3</span> <span class="token operator">=</span> <span class="token punctuation">(</span>g<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> h<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

f1 <span class="token operator">=</span> f2 <span class="token comment">// ok \u6E90\u53C2\u6570\u5217\u8868\u4E2D\u5B58\u5728\u989D\u5916\u7684\u53EF\u9009\u53C2\u6570\uFF0C\u53EF\u4EE5\u901A\u8FC7\u68C0\u67E5</span>
f2 <span class="token operator">=</span> f1 <span class="token comment">// ok \u76EE\u6807\u53C2\u6570\u5217\u8868\u4E2D\u5B58\u5728\u989D\u5916\u7684\u53EF\u9009\u53C2\u6570\uFF0C\u53EF\u4EE5\u901A\u8FC7\u68C0\u67E5</span>
f1 <span class="token operator">=</span> f3 <span class="token comment">// error \u4E0D\u5C5E\u4E8E\u4E0A\u8FF0\u4E24\u79CD\u60C5\u51B5</span>
</code></pre></div><p>\u66F4\u591A\u7EC6\u8282\u8BF7\u770B<a href="http://www.typescriptlang.org/docs/handbook/type-compatibility.html" target="_blank" rel="noopener noreferrer">\u5B98\u65B9\u6587\u6863</a>\u3002</p><h4 id="functions-with-overloads" tabindex="-1">Functions with Overloads <a class="header-anchor" href="#functions-with-overloads" aria-hidden="true">#</a></h4><p>When a function has overloads, each overload in the source type must be matched by a compatible signature on the target type. This ensures that the target function can be called in all the same situations as the source function.</p><h3 id="enums-1" tabindex="-1">Enums <a class="header-anchor" href="#enums-1" aria-hidden="true">#</a></h3><p>\u679A\u4E3E\u7C7B\u578B\u4E0E\u6570\u503C\u7C7B\u578B(number)\u662F\u517C\u5BB9\u7684\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span> red<span class="token punctuation">,</span> green<span class="token punctuation">,</span> blue <span class="token punctuation">}</span>
<span class="token keyword">let</span> a<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token keyword">let</span> b<span class="token operator">:</span> Color
a <span class="token operator">=</span> Color<span class="token punctuation">.</span>red <span class="token comment">// ok</span>
b <span class="token operator">=</span> <span class="token number">5</span> <span class="token comment">// ok</span>
</code></pre></div><p>\u4F46\u662F\u6765\u81EA\u4E0D\u540C\u679A\u4E3E\u7C7B\u578B\u7684\u679A\u4E3E\u503C\u4E4B\u95F4\u662F\u4E0D\u517C\u5BB9\u7684\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span> red<span class="token punctuation">,</span> green<span class="token punctuation">,</span> blue <span class="token punctuation">}</span>
<span class="token keyword">enum</span> Status <span class="token punctuation">{</span> ready<span class="token punctuation">,</span> waiting <span class="token punctuation">}</span>

<span class="token keyword">let</span> c <span class="token operator">=</span> Color<span class="token punctuation">.</span>red
c <span class="token operator">=</span> Status<span class="token punctuation">.</span>ready <span class="token comment">// error</span>
</code></pre></div><h3 id="classes-1" tabindex="-1">Classes <a class="header-anchor" href="#classes-1" aria-hidden="true">#</a></h3><p>\u7C7B\u7684\u517C\u5BB9\u6027\u89C4\u5219\u4E0E\u5BF9\u8C61\u5B57\u9762\u91CF\u548C\u63A5\u53E3\u7684\u89C4\u5219\u76F8\u4F3C\uFF0C\u4F46\u662F\u6709\u4E2A\u4F8B\u5916\uFF0C\u5F53\u5BF9\u4E24\u4E2A\u7C7B\u8FDB\u884C\u6BD4\u8F83\u65F6\uFF0C\u4EC5\u5B9E\u4F8B\u6210\u5458\u88AB\u6BD4\u8F83\uFF0C\u9759\u6001\u6210\u5458\u548C\u6784\u9020\u51FD\u6570\u4E0D\u5F71\u54CD\u7C7B\u7684\u517C\u5BB9\u6027\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">People</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token keyword">static</span> remark <span class="token operator">=</span> <span class="token string">&quot;I&#39;m a person&quot;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>fn<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> ln<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> fn <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> ln
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&#39;Jack&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token string">&#39;Nicholas&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Yang&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u9759\u6001\u6210\u5458\u548C\u6784\u9020\u51FD\u6570\u4E0D\u5F71\u54CD\u517C\u5BB9\u6027\uFF0C\u5728\u6CA1\u6709\u79C1\u6709\u548C\u4FDD\u62A4\u6210\u5458\u7684\u60C5\u51B5\u4E0B\uFF0C\u53EA\u8981\u5404\u5171\u6709\u6210\u5458\u90FD\u517C\u5BB9\uFF0C\u4EFB\u4F55\u4E24\u4E2A\u7C7B\u90FD\u662F\u517C\u5BB9\u7684</span>
a <span class="token operator">=</span> p <span class="token comment">// ok</span>
p <span class="token operator">=</span> a <span class="token comment">// ok</span>
</code></pre></div><p>\u4F46\u662F\u7C7B\u7684\u79C1\u6709\u6210\u5458\u548C\u4FDD\u62A4\u6210\u5458\u4F1A\u5F71\u54CD\u4E24\u4E2A\u7C7B\u7684\u517C\u5BB9\u578B\uFF0C\u5F53\u4E24\u4E2A\u7C7B\u5177\u6709\u79C1\u6709\u6216\u4FDD\u62A4\u6210\u5458\u65F6\uFF0C\u5B83\u4EEC\u7684\u5B9E\u4F8B\u517C\u5BB9\u7684\u5FC5\u8981\u6761\u4EF6\u662F\u5B83\u4EEC\u7684\u79C1\u6709\u548C\u4FDD\u62A4\u6210\u5458\u540C\u6E90\uFF0C\u5373\u6765\u81EA\u4E8E\u540C\u4E00\u4E2A\u7C7B\u7684\u58F0\u660E\uFF0C\u5426\u8005\u5373\u4F7F\u4E8C\u8005\u5177\u6709\u5B8C\u5168\u76F8\u540C\u7684 shape\uFF0C\u4E5F\u4E0D\u517C\u5BB9\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token keyword">private</span> age<span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">People</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token keyword">private</span> age<span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token string">&#39;Nicholas&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>

<span class="token comment">// \u867D\u7136\u4E24\u4E2A\u7C7B\u6709\u5B8C\u5168\u76F8\u540C\u7684shape\uFF0C\u4F46\u662F\u5B83\u4EEC\u7684\u79C1\u6709\u6210\u5458\u6765\u81EA\u4E0D\u540C\u7684\u7C7B\u58F0\u660E\uFF0C\u6240\u4EE5\u4E0D\u517C\u5BB9</span>
a <span class="token operator">=</span> p <span class="token comment">// error</span>
p <span class="token operator">=</span> a <span class="token comment">// error</span>
</code></pre></div><h3 id="generics-1" tabindex="-1">Generics <a class="header-anchor" href="#generics-1" aria-hidden="true">#</a></h3><p>\u7531\u4E8E TypeScript \u662F\u7ED3\u6784\u7C7B\u578B\u7CFB\u7EDF\uFF0C\u56E0\u6B64\u6CDB\u578B\u7C7B\u578B\u7684\u7C7B\u578B\u53C2\u6570\u4EC5\u5728\u4F5C\u4E3A\u6210\u5458\u7C7B\u578B\u7684\u4E00\u90E8\u5206\u4F7F\u7528\u65F6\u624D\u4F1A\u5F71\u54CD\u7ED3\u679C\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Empty<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> x<span class="token operator">:</span> Empty<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>
<span class="token keyword">let</span> y<span class="token operator">:</span> Empty<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
x <span class="token operator">=</span> y <span class="token comment">// ok, \u7C7B\u578B\u53C2\u6570\u6CA1\u6709\u5728\u6210\u5458\u4E2D\u4F7F\u7528\uFF0C\u4E0D\u5F71\u54CD\u7ED3\u679C\u7C7B\u578B\u7684\u517C\u5BB9\u6027</span>

<span class="token keyword">interface</span> <span class="token class-name">notEmpty<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  data<span class="token operator">:</span> <span class="token constant">T</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> a<span class="token operator">:</span> notEmpty<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>
<span class="token keyword">let</span> b<span class="token operator">:</span> notEmpty<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
a <span class="token operator">=</span> b <span class="token comment">// error, \u7C7B\u578B\u53C2\u6570\u662F\u6210\u5458\u7C7B\u578B\u7684\u4E00\u90E8\u5206</span>
</code></pre></div><h2 id="advanced-types" tabindex="-1"><a href="http://www.typescriptlang.org/docs/handbook/advanced-types.html" target="_blank" rel="noopener noreferrer">Advanced Types</a> <a class="header-anchor" href="#advanced-types" aria-hidden="true">#</a></h2><h3 id="intersection-types-\u4EA4\u53C9\u7C7B\u578B" tabindex="-1">Intersection Types (\u4EA4\u53C9\u7C7B\u578B) <a class="header-anchor" href="#intersection-types-\u4EA4\u53C9\u7C7B\u578B" aria-hidden="true">#</a></h3><p>\u4EA4\u53C9\u7C7B\u578B\u5C31\u662F\u628A\u591A\u4E2A\u4E0D\u540C\u7684\u7C7B\u578B\u7EC4\u5408\u6210\u4E00\u4E2A\u7C7B\u578B\uFF0C\u8BA9\u5B83\u62E5\u6709\u8FD9\u4E9B\u7C7B\u578B\u7684\u6240\u6709\u7279\u6027\uFF0C\u4F8B\u5982 <code>Person &amp; Serializable &amp; Loggable</code> \u662F <code>Person</code>\uFF0C <code>Serializable</code>\uFF0C<code>Loggable</code> \u8FD9\u4E09\u79CD\u7C7B\u578B\u7684\u4EA4\u53C9\u7C7B\u578B\uFF0C\u8FD9\u4E2A\u4EA4\u53C9\u7C7B\u578B\u7684\u5B9E\u4F8B\u5C06\u62E5\u6709\u8FD9\u4E09\u4E2A\u7C7B\u578B\u7684\u6240\u6709\u6210\u5458\u3002</p><h3 id="union-types-\u8054\u5408\u7C7B\u578B" tabindex="-1">Union Types (\u8054\u5408\u7C7B\u578B) <a class="header-anchor" href="#union-types-\u8054\u5408\u7C7B\u578B" aria-hidden="true">#</a></h3><p>\u8054\u5408\u7C7B\u578B\u548C\u4EA4\u53C9\u7C7B\u578B\u5F88\u76F8\u4F3C\uFF0C\u4F46\u662F\u4F7F\u7528\u65B9\u5F0F\u622A\u7136\u4E0D\u540C\u3002\u5728 JavaScript \u4E2D\u6211\u4EEC\u7ECF\u5E38\u6709\u8FD9\u6837\u7684\u9700\u6C42\uFF0C\u4E00\u4E2A\u51FD\u6570\u67D0\u4E2A\u53C2\u6570\u53EF\u4EE5\u662F\u591A\u79CD\u4E0D\u540C\u7684\u7C7B\u578B\uFF0C\u4F8B\u5982\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">/**
 * Takes a string and adds &quot;padding&quot; to the left.
 * If &#39;padding&#39; is a string, then &#39;padding&#39; is appended to the left side.
 * If &#39;padding&#39; is a number, then that number of spaces is added to the left side.
 */</span>
<span class="token keyword">function</span> <span class="token function">padLeft</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> padding<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> padding <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>padding <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> padding <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> padding <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Expected string or number, got &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>padding<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">padLeft</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;    Hello world&quot;</span>
<span class="token function">padLeft</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;Nicholas, &#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;Nicholas, Hello world&quot;</span>
<span class="token function">padLeft</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// passes at compile time, fails at runtime.</span>
</code></pre></div><p>\u5728\u63D0\u5230\u8054\u5408\u7C7B\u578B\u4E4B\u524D\u53EA\u80FD\u50CF\u8FD9\u6837\u5B9E\u73B0\uFF0C\u8FD9\u4E5F\u662F JavaScript \u4E2D\u7684\u89E3\u51B3\u65B9\u5F0F\uFF0C\u4F46\u662F\u6709\u4E00\u4E2A\u95EE\u9898\u662F\u53C2\u6570 <code>padding</code> \u7684\u7C7B\u578B\u662F <code>any</code>\uFF0C\u610F\u5473\u7740\u8FD9\u4E2A <code>padding</code> \u53C2\u6570\u53EF\u4EE5\u63A5\u53D7\u4EFB\u4F55\u7C7B\u578B\u7684\u503C\uFF0C\u800C\u4E0D\u4EC5\u4EC5\u662F <code>string</code> \u548C <code>number</code>\uFF0C\u8FD9\u4E0E TypeScript \u7C7B\u578B\u63A7\u5236\u7684\u7075\u9B42\u80CC\u9053\u800C\u9A70\uFF0C\u89E3\u51B3\u529E\u6CD5\u5C31\u662F\u4F7F\u7528\u8054\u5408\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">padLeft</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> padding<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> padding <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>padding <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> padding <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> padding <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">padLeft</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
<span class="token function">padLeft</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;Nicholas, &#39;</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
<span class="token function">padLeft</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// error, fails at compile time</span>
</code></pre></div><p>\u8054\u5408\u7C7B\u578B\u7684\u610F\u601D\u662F\u8FD9\u4E2A\u7C7B\u578B\u7684\u5B9E\u4F8B\u53EF\u4EE5\u662F\u591A\u79CD\u7C7B\u578B\u4E4B\u4E00\uFF0C\u6BCF\u4E2A\u7C7B\u578B\u7528\u7B26\u53F7 <code>|</code> \u5206\u9694\uFF0C\u4F8B\u5982 <code>string | number| boolean</code> \u662F <code>string</code>\uFF0C<code>number</code> \u548C <code>boolean</code> \u7684\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u3002</p><p>\u5982\u679C\u4E00\u4E2A\u53D8\u91CF\u662F\u8054\u5408\u7C7B\u578B\uFF0C\u6211\u4EEC\u53EA\u80FD\u901A\u8FC7\u8FD9\u4E2A\u53D8\u91CF\u8BBF\u95EE\u8FD9\u4E2A\u8054\u5408\u7684\u6240\u6709\u7C7B\u578B\u7684\u5171\u6709\u90E8\u5206\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Fish</span> <span class="token punctuation">{</span>
  <span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
  <span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Bird</span> <span class="token punctuation">{</span>
  <span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
  <span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getSmallPet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Fish <span class="token operator">|</span> Bird <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> pet <span class="token operator">=</span> <span class="token function">getSmallPet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
pet<span class="token punctuation">.</span><span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
pet<span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// error</span>
pet<span class="token punctuation">.</span><span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// error</span>
</code></pre></div><h3 id="type-guards-and-differentiating-types" tabindex="-1">Type Guards and Differentiating Types <a class="header-anchor" href="#type-guards-and-differentiating-types" aria-hidden="true">#</a></h3><p>\u5982\u4E0A\u9762\u4F8B\u5B50\u770B\u5230\u7684\u90A3\u6837\uFF0C<code>getSmallPet</code> \u867D\u7136\u8FD4\u56DE\u4E00\u4E2A <code>Fish</code> \u548C <code>Bird</code> \u7684\u8054\u5408\u7C7B\u578B\uFF0C\u4F46\u662F\u6211\u4EEC\u53EA\u80FD\u8BBF\u95EE\u8FD9\u4E24\u4E2A\u7C7B\u578B\u5171\u6709\u7684\u6210\u5458 <code>layEggs</code>\uFF0C\u5373\u4F7F\u5728\u8FD0\u884C\u65F6\u9636\u6BB5(runtime)\u53EF\u4EE5\u786E\u5B9A\u8FD4\u56DE\u7C7B\u578B\u4E3A <code>Fish</code>\uFF0C\u4F46\u662F <code>pet.swim()</code> \u4F9D\u7136\u65E0\u6CD5\u901A\u8FC7\u7F16\u8BD1\u68C0\u67E5\u3002\u8FD9\u4F7F\u5F97\u8054\u5408\u7C7B\u578B\u5728\u67D0\u4E9B\u65F6\u5019\u663E\u5F97\u6709\u70B9 tricky\uFF0C\u4E0D\u8FC7\u4E5F\u6709\u5E94\u5BF9\u529E\u6CD5\uFF0C\u6700\u7B80\u5355\u76F4\u89C2\u7684\u5C31\u662F\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00(type assertion):</p><div class="language-ts"><pre><code><span class="token keyword">let</span> pet <span class="token operator">=</span> <span class="token function">getSmallPet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Fish<span class="token operator">&gt;</span>pet<span class="token punctuation">)</span><span class="token punctuation">.</span>swim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token operator">&lt;</span>Fish<span class="token operator">&gt;</span>pet<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token operator">&lt;</span>Bird<span class="token operator">&gt;</span>pet<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E0A\u9762\u7684\u65B9\u6CD5\u867D\u7136\u53EF\u884C\uFF0C\u4F46\u662F\u4E0D\u591F\u7B80\u6D01\uFF0C\u6211\u4EEC\u9700\u8981\u8FDB\u884C\u591A\u6B21\u7C7B\u578B\u65AD\u8A00\uFF0C\u4E00\u4E2A\u66F4\u597D\u7684\u89E3\u51B3\u65B9\u6848\u662F\u4F7F\u7528\u7C7B\u578B\u5B88\u536B(type guards).</p><h4 id="user-defined-type-guards" tabindex="-1">User-Defined Type Guards <a class="header-anchor" href="#user-defined-type-guards" aria-hidden="true">#</a></h4><p>\u4E00\u4E2A type guard \u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u8FD9\u4E2A\u8868\u8FBE\u5F0F\u7528\u6765\u6267\u884C\u8FD0\u884C\u65F6\u7C7B\u578B\u68C0\u67E5\u3002\u8981\u5B9A\u4E49\u4E00\u4E2A type guard\uFF0C\u53EA\u9700\u8981\u5B9A\u4E49\u4E00\u4E2A\u8FD4\u56DE\u7C7B\u578B\u4E3A\u7C7B\u578B\u8C13\u8BCD(type predicate)\u7684\u51FD\u6570\u5373\u53EF\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">isFish</span><span class="token punctuation">(</span>pet<span class="token operator">:</span> Fish<span class="token operator">|</span>Bird<span class="token punctuation">)</span><span class="token operator">:</span> pet <span class="token keyword">is</span> Fish <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Fish<span class="token operator">&gt;</span>pet<span class="token punctuation">)</span><span class="token punctuation">.</span>swim <span class="token operator">!==</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u91CC\u7684 <code>pet is Fish</code> \u5C31\u662F\u7C7B\u578B\u8C13\u8BCD(type predicate)\uFF0C\u7C7B\u578B\u8C13\u8BCD\u9075\u5FAA <code>parameterName is Type</code> \u8FD9\u6837\u7684\u5F62\u5F0F\uFF0C\u5176\u4E2D <code>parameterName</code> \u5FC5\u987B\u662F\u6765\u81EA\u5F53\u524D\u51FD\u6570\u53C2\u6570\u5217\u8868\u7684\u53C2\u6570\u540D\u3002\u4EFB\u4F55\u65F6\u5019\uFF0C\u53EA\u8981 <code>isFish</code> \u5728\u67D0\u4E2A\u517C\u5BB9\u7684\u53D8\u91CF\u4E0A\u8C03\u7528\uFF0CTypeScript \u5C31\u4F1A\u5C06\u8FD9\u4E2A\u53D8\u91CF\u7684\u7C7B\u578B\u7F29\u7A84\u5230\u5177\u4F53\u7684\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> pet <span class="token operator">=</span> <span class="token function">getSmallPet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFish</span><span class="token punctuation">(</span>pet<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  pet<span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  pet<span class="token punctuation">.</span><span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u901A\u8FC7 type guard \u4E4B\u540E\uFF0CTypeScript \u4E0D\u4EC5\u77E5\u9053\u5728 <code>if</code> \u5206\u652F\uFF0C<code>pet</code> \u7684\u7C7B\u578B\u662F <code>Fish</code>\uFF0C\u800C\u4E14\u4E5F\u77E5\u9053\u5728 <code>else</code> \u5206\u652F\uFF0C<code>pet</code> \u7684\u7C7B\u578B\u662F <code>Bird</code>\u3002</p><h4 id="typeof-type-guards" tabindex="-1"><span style="color:red;">typeof</span> type guards <a class="header-anchor" href="#typeof-type-guards" aria-hidden="true">#</a></h4><p>\u6211\u4EEC\u56DE\u5230\u524D\u9762 <code>padLeft</code> \u51FD\u6570\u7684\u4F8B\u5B50\uFF0C\u53EF\u4EE5\u5B9A\u4E49\u4E24\u4E2A user-defined type guard \u6765\u5C06\u5176\u6539\u5199\u4E3A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">isNumber</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> x <span class="token keyword">is</span> Number <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">isString</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> x <span class="token keyword">is</span> String <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">padLeft</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> padding<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNumber</span><span class="token punctuation">(</span>padding<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>padding <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isString</span><span class="token punctuation">(</span>padding<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> padding <span class="token operator">+</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Expected string or number, got &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>padding<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7136\u800C\u5FC5\u987B\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\u6765\u786E\u5B9A\u4E00\u4E2A\u7C7B\u578B\u662F\u5426\u4E3A\u539F\u59CB\u7C7B\u578B(primitive)\u662F\u5F88\u75DB\u82E6\u7684\uFF0C\u5E78\u8FD0\u7684\u662F\uFF0CTypeScript \u53EF\u4EE5\u5C06 <code>typeof x === &#39;number&#39;</code> \u8FD9\u6837\u7684\u8BED\u53E5\u76F4\u63A5\u89C6\u4E3A <span style="color:red;">typeof</span> type guard\uFF0C\u800C\u4E0D\u5FC5\u5C06 <code>typeof x === &#39;number&#39;</code> \u5C01\u88C5\u5230 user-defined type guard \u4E2D\u3002\u8FD9\u610F\u5473\u7740\u4E0B\u9762\u7684\u4EE3\u7801\u5C31\u5DF2\u7ECF\u5305\u542B\u4E86 type guard\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">padLeft</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> padding<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> padding <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// typeof type guard</span>
        <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>padding <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> padding <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// typeof type guard</span>
        <span class="token keyword">return</span> padding <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Expected string or number, got &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>padding<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><span style="color:red;">typeof</span> type guard \u6709\u4E24\u79CD\u5F62\u5F0F\uFF0C<code>typeof v === typename</code> \u548C <code>typeof v !== typename</code>\uFF0C\u5176\u4E2D <code>typename</code> \u5FC5\u987B\u4E3A <code>&#39;number&#39;</code>\uFF0C<code>&#39;string&#39;</code>\uFF0C<code>&#39;boolean&#39;</code>\uFF0C<code>&#39;symbol&#39;</code> \u56DB\u8005\u4E4B\u4E00\uFF0C\u82E5\u4E3A\u5176\u5B83\u503C\uFF0CTypeScript \u5219\u4E0D\u4F1A\u5C06\u8FD9\u4E2A\u8868\u8FBE\u5F0F\u89C6\u4E3A type guard\u3002</p><h4 id="instanceof-type-guards" tabindex="-1"><span style="color:red;">instanceof</span> type guards <a class="header-anchor" href="#instanceof-type-guards" aria-hidden="true">#</a></h4><p>\u5BF9\u4E8E\u975E\u539F\u59CB\u7C7B\u578B\uFF0C\u5373\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u4F7F\u7528 <code>instanceof</code> \u8FDB\u884C type guard\uFF0C<code>instanceof</code> \u5DE6\u8FB9\u662F\u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u53F3\u8FB9\u662F\u7C7B\u7684\u6784\u9020\u51FD\u6570\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Padder</span> <span class="token punctuation">{</span>
  <span class="token function">getPaddingString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">SpaceRepeatingPadder</span> <span class="token keyword">implements</span> <span class="token class-name">Padder</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> numSpaces<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
  <span class="token function">getPaddingString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>numSpaces <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">getNumberOfSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numSpaces
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">StringPadder</span> <span class="token keyword">implements</span> <span class="token class-name">Padder</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
  <span class="token function">getPaddingString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getRandomPadder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.5</span> <span class="token operator">?</span>
      <span class="token keyword">new</span> <span class="token class-name">SpaceRepeatingPadder</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">:</span>
      <span class="token keyword">new</span> <span class="token class-name">StringPadder</span><span class="token punctuation">(</span><span class="token string">&quot;  &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> padder <span class="token operator">=</span> <span class="token function">getRandomPadder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>padder <span class="token keyword">instanceof</span> <span class="token class-name">StringPadder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// padder \u7F29\u7A84\u4E3A StringPadder \u7C7B\u578B</span>
  padder<span class="token punctuation">.</span><span class="token function">getPaddingString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// padder \u7F29\u7A84\u4E3A SpaceRepeatingPadder \u7C7B\u578B</span>
  padder<span class="token punctuation">.</span><span class="token function">getPaddingString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
  padder<span class="token punctuation">.</span><span class="token function">getNumberOfSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="nullable-types" tabindex="-1">Nullable Types <a class="header-anchor" href="#nullable-types" aria-hidden="true">#</a></h3><p>TypeScript \u6709\u4E24\u4E2A\u7279\u6B8A\u7C7B\u578B\uFF1A<code>null</code> \u548C <code>undefined</code>\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C<code>null</code> \u548C <code>undefined</code> \u53EF\u4EE5\u8D4B\u503C\u7ED9\u4EFB\u4F55\u7C7B\u578B\u7684\u53D8\u91CF\u3002\u4E5F\u5C31\u662F\u8BF4\u5728\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5F53\u4F60\u58F0\u660E\u67D0\u4E2A\u7C7B\u578B\u7684\u53D8\u91CF\u65F6\uFF0C\u5B9E\u9645\u4E0A\u53D8\u91CF\u7684\u7C7B\u578B\u662F\u5F53\u524D\u58F0\u660E\u7C7B\u578B\u4E0E <code>null</code> \u548C <code>undefined</code> \u7684\u8054\u5408\u7C7B\u578B\u3002\u8FD9\u53EF\u80FD\u4E0D\u662F\u6211\u4EEC\u60F3\u8981\u7684\u6548\u679C\uFF0C\u8981\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u53EF\u4EE5\u5728\u914D\u7F6E\u6587\u4EF6 <code>tsconfig.json</code> \u4E2D\u5C06 <code>compilerOptions.strictNullChecks</code> \u9009\u9879\u8BBE\u7F6E\u4E3A <code>true</code>\uFF1A</p><div class="language-json"><pre><code><span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token property">&quot;strictNullChecks&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u6837\u8BBE\u7F6E\u4E4B\u540E\uFF0C\u58F0\u660E\u53D8\u91CF\u65F6\u5C31\u4E0D\u4F1A\u81EA\u52A8\u5305\u542B <code>null</code> \u548C <code>undefined</code> \u7C7B\u578B\uFF0C\u9664\u975E\u4F60\u663E\u5F0F\u7684\u58F0\u660E\u4E3A\u8054\u5408\u7C7B\u578B\u3002</p><p>\u5F53\u5F00\u542F\u4E86\u4E25\u683C\u7A7A\u68C0\u67E5\u4E4B\u540E\uFF0C\u53EF\u9009\u53C2\u6570/\u5C5E\u6027(optional parameters / properties)\u7684\u7C7B\u578B\u4F1A\u81EA\u52A8\u52A0\u4E0A <code>| undefined</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// optional parameters</span>
<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">?</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// y \u7684\u7C7B\u578B\u4E3A number | undefined</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// error, null \u7C7B\u578B\u4E0D\u80FD\u8D4B\u503C\u7ED9 number | undefined \u7C7B\u578B</span>

<span class="token comment">// optional properties</span>
<span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">I</span></span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token builtin">number</span>
  b<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token comment">// b \u7684\u5B9E\u9645\u7C7B\u578B\u4E3A\uFF1A number | undefined</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">I</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
i<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">2</span> <span class="token comment">// ok</span>
i<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token keyword">undefined</span> <span class="token comment">// error, undefined \u4E0D\u80FD\u8D4B\u503C\u7ED9 number</span>
i<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">3</span> <span class="token comment">// ok</span>
i<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token keyword">undefined</span> <span class="token comment">// ok</span>
i<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token comment">// error\uFF0C null \u4E0D\u80FD\u8D4B\u503C\u7ED9 number | undefined</span>
</code></pre></div><h4 id="type-guards-and-type-assertions" tabindex="-1">Type guards and type assertions <a class="header-anchor" href="#type-guards-and-type-assertions" aria-hidden="true">#</a></h4><p>\u7531\u4E8E nullable \u7C7B\u578B\u662F\u901A\u8FC7 union \u5B9E\u73B0\u7684\uFF0C\u56E0\u6B64\u5728\u4F7F\u7528 nullable \u7C7B\u578B\u65F6\u9700\u8981\u5148\u6D88\u9664\u7A7A\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">broken</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// error, name is possibly undefined</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5728 JavaScript \u4E2D\u5E38\u7528\u5982\u4E0B\u65B9\u6CD5\u6D88\u9664\u7A7A\u503C</span>
<span class="token keyword">function</span> <span class="token function">fixed</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;default&#39;</span>
  <span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F46\u662F\u5F53\u9047\u5230\u5982\u4E0B\u8FD9\u79CD\u60C5\u51B5\u65F6\uFF0C\u4E0A\u9762\u6D88\u9664\u7A7A\u7C7B\u578B\u7684\u65B9\u6CD5\u53C8\u4E0D\u53EF\u884C\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">broken</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">greeting</span><span class="token punctuation">(</span>greet<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;, &#39;</span> <span class="token operator">+</span> greet  <span class="token comment">// error, name is possibly undefined</span>
  <span class="token punctuation">}</span>
  name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;default&#39;</span>
  <span class="token keyword">return</span> <span class="token function">greeting</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E0A\u9762\u7F16\u8BD1\u5668\u65E0\u6CD5\u6D88\u9664\u7A7A\u7C7B\u578B\u7684\u539F\u56E0\u662F\uFF0C\u51FD\u6570\u5185\u90E8\u7684\u5D4C\u5957\u51FD\u6570\u7684\u6267\u884C\u4E0A\u4E0B\u6587\u662F\u4E0D\u786E\u5B9A\u7684\uFF0C\u7F16\u8BD1\u5668\u65E0\u6CD5\u8DDF\u8E2A\u5D4C\u5957\u51FD\u6570\u6240\u6709\u7684\u8C03\u7528\uFF0C\u5C24\u5176\u662F\u5982\u679C\u5D4C\u5957\u51FD\u6570\u88AB return \u5230\u51FD\u6570\u5916\u90E8\uFF0C\u5F53\u8FD9\u4E2A\u51FD\u6570\u88AB\u6267\u884C\u65F6\uFF0C\u5B83\u5185\u90E8\u53D8\u91CF\u4F8B\u5982 <code>name</code> \u7684\u7C7B\u578B\u662F\u4E0D\u660E\u786E\u7684\u3002</p><p>\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\u9700\u8981\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00\u64CD\u4F5C\u7B26(type assertion operator) <code>!</code> \u6765\u624B\u52A8\u7684\u6D88\u9664\u7A7A\u503C\uFF0C\u8BED\u6CD5\u4E3A\uFF1A<code>identifier!</code>\uFF0C\u8FD9\u5C06\u79FB\u9664\u53D8\u91CF <code>identifier</code> \u7684\u7C7B\u578B\u4E2D\u7684 <code>undefined</code> \u548C <code>null</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">fixed</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">greeting</span><span class="token punctuation">(</span>greet<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> name<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> name<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;, &#39;</span> <span class="token operator">+</span> greet  <span class="token comment">// ok</span>
  name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;default&#39;</span>
  <span class="token keyword">return</span> <span class="token function">greeting</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="type-aliases-\u7C7B\u578B\u522B\u540D" tabindex="-1">Type Aliases (\u7C7B\u578B\u522B\u540D) <a class="header-anchor" href="#type-aliases-\u7C7B\u578B\u522B\u540D" aria-hidden="true">#</a></h3><p>\u7C7B\u578B\u522B\u540D\uFF0C\u987E\u540D\u601D\u4E49\uFF0C\u5C31\u662F\u4E3A\u67D0\u4E2A\u7C7B\u578B\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u540D\u5B57\uFF0C\u5E76\u6CA1\u7528\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u7C7B\u578B\u3002\u7C7B\u578B\u522B\u540D\u4E0E\u63A5\u53E3\u7684\u6982\u5FF5\u6709\u70B9\u7C7B\u4F3C\uFF0C\u4F46\u662F\u53EF\u4EE5\u4E3A\u5305\u62EC\u539F\u59CB\u7C7B\u578B\uFF0C\u8054\u5408\u7C7B\u578B\u7B49\u4EFB\u4F55\u5176\u5B83\u7C7B\u578B\u521B\u5EFA\u522B\u540D\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Name</span> <span class="token operator">=</span> <span class="token builtin">string</span>
<span class="token keyword">type</span> <span class="token class-name">NameResolver</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
<span class="token keyword">type</span> <span class="token class-name">NameOrResolver</span> <span class="token operator">=</span> Name <span class="token operator">|</span> NameResolver

<span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span>p<span class="token operator">:</span> NameOrResolver<span class="token punctuation">)</span><span class="token operator">:</span> Name <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> p <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> p
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>\u6CE8\u610F\uFF1A\u4E3A\u539F\u59CB\u7C7B\u578B\u521B\u5EFA\u522B\u540D\u4E0D\u662F\u5E38\u89C1\u7684\u7528\u6CD5\uFF0C\u5C3D\u7BA1\u5B83\u53EF\u4EE5\u4F5C\u4E3A\u7F16\u5199\u6587\u6863\u7684\u4E00\u79CD\u5F62\u5F0F\u3002</p></blockquote><p>\u7C7B\u4F3C\u63A5\u53E3\uFF0C\u7C7B\u578B\u522B\u540D\u4E5F\u53EF\u4EE5\u662F\u6CDB\u578B\u7684\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Container<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span>
</code></pre></div><p>\u4E5F\u53EF\u4EE5\u50CF\u4E0B\u9762\u8FD9\u6837\u5728\u5C5E\u6027\u4E2D\u5D4C\u5957\u7684\u5F15\u7528\u7C7B\u578B\u522B\u540D\u672C\u8EAB\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Tree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span>
  left<span class="token operator">:</span> Tree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
  right<span class="token operator">:</span> Tree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u9664\u6B64\u4E4B\u5916\uFF0C\u7C7B\u578B\u522B\u540D\u4E0D\u80FD\u51FA\u73B0\u5728\u58F0\u660E\u8BED\u53E5\u53F3\u8FB9\u7684\u4EFB\u4F55\u4F4D\u7F6E\uFF0C\u4E0B\u9762\u8FD9\u6837\u662F\u9519\u8BEF\u7684\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">myAlias</span> <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>myAlias<span class="token operator">&gt;</span> <span class="token comment">// error</span>
</code></pre></div><h4 id="interfaces-vs-type-aliases" tabindex="-1">Interfaces vs. Type Aliases <a class="header-anchor" href="#interfaces-vs-type-aliases" aria-hidden="true">#</a></h4><p>\u5982\u524D\u9762\u6240\u8BF4\u7684\uFF0C\u7C7B\u578B\u522B\u540D\u53EF\u4EE5\u8DDF\u63A5\u53E3\u975E\u5E38\u76F8\u4F3C\uFF0C\u4F46\u662F\u5B83\u4EEC\u4E4B\u95F4\u8FD8\u662F\u6709\u4E00\u4E9B\u5FAE\u5999\u7684\u5DEE\u522B\u3002\u5176\u4E2D\u4E00\u4E2A\u91CD\u8981\u7684\u5DEE\u522B\u662F\uFF0Ctype aliases \u4E0D\u80FD\u88AB\u6269\u5C55(extended)\u548C\u5B9E\u73B0(implemented)\uFF0C\u4E5F\u4E0D\u80FD\u53BB\u6269\u5C55\u548C\u5B9E\u73B0\u5176\u5B83\u7C7B\u578B\uFF0C\u5F53\u9700\u8981\u5B8C\u6210\u8FD9\u6837\u7684\u4EFB\u52A1\u65F6\uFF0C\u8BF7\u4F7F\u7528\u63A5\u53E3\u3002</p><h3 id="string-literal-types" tabindex="-1">String Literal Types <a class="header-anchor" href="#string-literal-types" aria-hidden="true">#</a></h3><p>\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u5141\u8BB8\u4F60\u4E3A\u4E00\u4E2A\u5B57\u7B26\u4E32\u53D8\u91CF\u6307\u5B9A\u4E00\u4E2A\u786E\u5B9A\u7684\u503C\u3002\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u901A\u5E38\u4E0E\u8054\u5408\u7C7B\u578B\uFF0C\u7C7B\u578B\u5B88\u536B\u4EE5\u53CA\u7C7B\u578B\u522B\u540D\u4E00\u8D77\u4F7F\u7528\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E9B\u7279\u6027\u53BB\u6A21\u62DF\u5B57\u7B26\u4E32\u679A\u4E3E\u7684\u884C\u4E3A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Easing</span> <span class="token operator">=</span> <span class="token string">&#39;ease-in&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;ease-out&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;ease-in-out&#39;</span>

<span class="token keyword">class</span> <span class="token class-name">UIElement</span> <span class="token punctuation">{</span>
  <span class="token function">animate</span><span class="token punctuation">(</span>dx<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> dy<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> easing<span class="token operator">:</span> Easing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>easing <span class="token operator">===</span> <span class="token string">&#39;ease-in&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>easing <span class="token operator">===</span> <span class="token string">&#39;ease-out&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>easing <span class="token operator">===</span> <span class="token string">&#39;ease-in-out&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// error</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UIElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
button<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;ease-in&#39;</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
button<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;uneasy&#39;</span><span class="token punctuation">)</span> <span class="token comment">// error\uFF0C&#39;uneasy&#39; \u7C7B\u578B\u4E0D\u80FD\u8D4B\u503C\u7ED9 &#39;ease-in&#39; | &#39;ease-out&#39; | &#39;ease-in-out&#39; \u7C7B\u578B</span>
</code></pre></div><p>\u5982\u4E0A\u9762\u770B\u5230\u7684\uFF0C\u4F60\u53EA\u80FD\u4F20\u9012\u4E09\u4E2A\u5141\u8BB8\u7684\u5B57\u7B26\uFF0C\u5176\u5B83\u4EFB\u4F55\u503C\u90FD\u4F1A\u9020\u6210\u9519\u8BEF\u3002</p><h3 id="numeric-literal-types" tabindex="-1">Numeric Literal Types <a class="header-anchor" href="#numeric-literal-types" aria-hidden="true">#</a></h3><p>\u4E0E\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u7C7B\u4F3C\uFF0C\u4E5F\u6709\u6570\u503C\u5B57\u9762\u91CF\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">rollDice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">6</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53EA\u80FD\u8FD4\u56DE 1\uFF0C2\uFF0C3\uFF0C4\uFF0C5\uFF0C6\uFF0C\u8FD9\u516D\u4E2A\u6570\u5B57\u4E4B\u4E00\uFF0C\u8FD4\u56DE\u4EFB\u4F55\u5176\u5B83\u503C\u90FD\u662F\u9519\u8BEF</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="enum-member-types" tabindex="-1">Enum Member Types <a class="header-anchor" href="#enum-member-types" aria-hidden="true">#</a></h3><p>\u524D\u9762\u8BB2<a href="#des">\u679A\u4E3E</a>\u7684\u65F6\u5019\u6709\u8BF4\u8FC7\uFF0C\u679A\u4E3E\u6210\u5458\u4E5F\u53EF\u4EE5\u5F53\u4F5C\u7C7B\u578B\u6765\u4F7F\u7528\uFF0C\u6574\u4E2A\u679A\u4E3E\u53EF\u4EE5\u770B\u4F5C\u662F\u679A\u4E3E\u6210\u5458\u7C7B\u578B\u7684\u4E00\u4E2A\u8054\u5408(union)\u3002</p><h3 id="discriminated-unions" tabindex="-1">Discriminated Unions <a class="header-anchor" href="#discriminated-unions" aria-hidden="true">#</a></h3><p>\u4F60\u53EF\u4EE5\u7ED3\u5408\u4F7F\u7528\u5355\u4F8B\u7C7B\u578B(singleton types)\uFF0C\u8054\u5408\u7C7B\u578B(union types)\uFF0C\u7C7B\u578B\u5B88\u536B(type guards)\u4EE5\u53CA\u7C7B\u578B\u522B\u540D(type aliases)\u6765\u521B\u5EFA\u66F4\u9AD8\u7EA7\u7684\u6A21\u5F0F\uFF0C\u5373 discriminated unions\u3002</p><blockquote><p>\u901A\u5E38\u6211\u4EEC\u8BF4\u7684\u5355\u4F8B\u7C7B\u578B(singleton types)\uFF0C\u6307\u7684\u5C31\u662F\u679A\u4E3E\u6210\u5458\u7C7B\u578B\u4EE5\u53CA\u6570\u503C/\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u3002</p></blockquote><p>\u8981\u5B9E\u73B0 discriminated unions\uFF0C\u9700\u8981\u5B9E\u73B0\u4E0B\u9762\u4E09\u70B9\uFF1A</p><ol><li>\u88AB\u8054\u5408\u7684\u6240\u6709\u7C7B\u578B\u90FD\u6709\u4E00\u4E2A\u76F8\u540C\u7684\u7684\u5355\u4F8B\u7C7B\u578B\u5C5E\u6027 -- the discriminant</li></ol><div class="language-ts"><pre><code><span class="token comment">// \u6BCF\u4E2A\u7C7B\u578B\u90FD\u6709\u5C5E\u6027 kind\uFF0C\u4E14\u4E3A\u5355\u4F8B\u7C7B\u578B</span>
<span class="token keyword">interface</span> <span class="token class-name">Square</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&quot;square&quot;</span><span class="token punctuation">;</span>
  size<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Rectangle</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&quot;rectangle&quot;</span><span class="token punctuation">;</span>
  width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&quot;circle&quot;</span><span class="token punctuation">;</span>
  radius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="2"><li>\u521B\u5EFA\u4E00\u4E2A\u8054\u5408\u7C7B\u578B</li></ol><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Shape</span> <span class="token operator">=</span> Square <span class="token operator">|</span> Rectangle <span class="token operator">|</span> Circle
</code></pre></div><ol start="3"><li>\u4F7F\u7528 discriminated union\uFF1A</li></ol><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC\u4F1A\u6709\u4E00\u4E2A\u9690\u5F0F\u7684 type guard \u7684\u6548\u679C</span>
    <span class="token comment">// \u7F16\u8BD1\u5668\u80FD\u591F\u901A\u8FC7 s.kind \u5C5E\u6027\u7684 singleton type \u6765\u7F29\u7A84 s \u7684\u7C7B\u578B</span>
    <span class="token keyword">case</span> <span class="token string">&quot;square&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span> <span class="token comment">// s \u7684\u7C7B\u578B\u88AB\u7F29\u7A84\u4E3A Square</span>
    <span class="token keyword">case</span> <span class="token string">&quot;rectangle&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>height <span class="token operator">*</span> s<span class="token punctuation">.</span>width<span class="token punctuation">;</span> <span class="token comment">// s \u7684\u7C7B\u578B\u88AB\u7F29\u7A84\u4E3A Rectangle</span>
    <span class="token keyword">case</span> <span class="token string">&quot;circle&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> s<span class="token punctuation">.</span>radius <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// s \u7684\u7C7B\u578B\u88AB\u7F29\u7A84\u4E3A Circle</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7EE7\u7EED\u770B\u4E0B\u9762\u7684\u60C5\u51B5\uFF0C\u8FD8\u662F\u4E0A\u9762\u7684 <code>area</code> \u51FD\u6570\uFF0C\u5982\u679C\u5C06 <code>switch</code> \u7684\u5206\u652F\u51CF\u5C11\u4E00\u4E2A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&quot;square&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&quot;rectangle&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>height <span class="token operator">*</span> s<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;circle&#39;</span><span class="token punctuation">,</span> radius<span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// ok\uFF0Cundefined</span>
</code></pre></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u5373\u4F7F <code>switch</code> \u7684\u5206\u652F\u6CA1\u6709\u8986\u76D6 <code>s</code> \u7684 discriminated union \u7684\u6240\u6709\u60C5\u51B5\uFF0C\u7F16\u8BD1\u5668\u4E5F\u4E0D\u4F1A\u63D0\u793A\u9519\u8BEF\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\u5982\u679C\u6211\u4EEC\u5E0C\u671B\u5728\u7F16\u8BD1\u9636\u6BB5\u5C31\u53D1\u73B0\u95EE\u9898\uFF0C\u53EF\u4EE5\u6253\u5F00\u4E25\u683C\u7A7A\u68C0\u67E5\u8BBE\u7F6E <code>--strictNullChecks</code>\uFF0C\u5E76\u4E3A\u51FD\u6570\u663E\u5F0F\u6307\u5B9A\u8FD4\u56DE\u7C7B\u578B\uFF0C\u6BD4\u5982\u4E3A <code>area</code> \u51FD\u6570\u663E\u5F0F\u7684\u6307\u5B9A\u8FD4\u56DE\u7C7B\u578B\u4E3A number\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\u5C31\u4E0D\u80FD\u901A\u8FC7\u7F16\u8BD1\u68C0\u67E5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span> <span class="token comment">// error, Function lacks ending return statement and return type does not include &#39;undefined&#39;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&quot;square&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&quot;rectangle&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>height <span class="token operator">*</span> s<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u66F4\u591A\u7528\u6CD5\u8BF7\u770B\u5B98\u65B9\u6587\u6863\u3002</p><h3 id="polymorphic-this-types-\u591A\u6001\u7684-this-\u7C7B\u578B" tabindex="-1">Polymorphic <span style="color:red;">this</span> types (\u591A\u6001\u7684 this \u7C7B\u578B) <a class="header-anchor" href="#polymorphic-this-types-\u591A\u6001\u7684-this-\u7C7B\u578B" aria-hidden="true">#</a></h3><p>\u591A\u6001\u7684 this \u7C7B\u578B\uFF0C\u987E\u540D\u601D\u4E49 this \u4EE3\u8868\u7684\u7C7B\u578B\u662F\u591A\u6001\u7684\uFF0C\u4E0D\u662F\u56FA\u5B9A\u7684\uFF0C\u8BF7\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">BasicCalculator</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">protected</span> value<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
  <span class="token function">currentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value
  <span class="token punctuation">}</span>
  <span class="token function">add</span><span class="token punctuation">(</span>operand<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span> <span class="token punctuation">{</span> <span class="token comment">// \u8FD4\u56DE polymorphic this \u7C7B\u578B</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">+=</span> operand
    <span class="token keyword">return</span> <span class="token keyword">this</span>
  <span class="token punctuation">}</span>
  <span class="token function">multiply</span><span class="token punctuation">(</span>operand<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span> <span class="token punctuation">{</span> <span class="token comment">// \u8FD4\u56DE polymorphic this \u7C7B\u578B</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">*=</span> operand
    <span class="token keyword">return</span> <span class="token keyword">this</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicCalculator</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">currentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u56E0\u4E3A <code>add</code>\uFF0C<code>multiply</code> \u65B9\u6CD5\u8FD4\u56DE\u5BF9\u8C61\u672C\u8EAB\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5199\u94FE\u5F0F\u8C03\u7528\u65B9\u6CD5\u7684\u8BED\u53E5\u3002\u73B0\u5728\u6211\u4EEC\u6269\u5C55 <code>BasicCalculator</code> \u7C7B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">ScientificCalculator</span> <span class="token keyword">extends</span> <span class="token class-name">BasicCalculator</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">sin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span> <span class="token punctuation">{</span> <span class="token comment">// \u8FD4\u56DE polymorphic this \u7C7B\u578B</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScientificCalculator</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">currentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
</code></pre></div><p>\u53EF\u4EE5\u770B\u5230\u8FD9\u91CC\u7684\u94FE\u5F0F\u8C03\u7528\u8BED\u53E5\u4E5F\u80FD\u6B63\u5E38\u5DE5\u4F5C\uFF0C\u8FD9\u6B63\u662F\u56E0\u4E3A <code>BasicCalculator</code> \u7684 <code>add</code> \u548C <code>multiply</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u662F polymorphic this \u7C7B\u578B\uFF0C\u5B83\u80FD\u4FDD\u8BC1 <code>add</code> \u548C <code>multiply</code> \u5728\u88AB\u8C03\u7528\u65F6\uFF0C\u5C06\u5B9E\u9645\u8FD4\u56DE\u7C7B\u578B\u7ED1\u5B9A\u5230\u6B63\u786E\u5B9E\u4F8B\u7C7B\u578B\u4E0A\u3002\u53CD\u4E4B\uFF0C\u5982\u679C <code>add</code> \u548C <code>multiply</code> \u4E0D\u662F\u8FD4\u56DE polymorphic this \u7C7B\u578B\uFF0C\u800C\u662F\u8FD4\u56DE\u5177\u4F53\u7684\u7C7B\u7C7B\u578B\uFF0C<code>ScientificCalculator</code> \u7684\u5B9E\u4F8B\u5C06\u65E0\u6CD5\u7EE7\u7EED\u4F7F\u7528\u94FE\u5F0F\u8C03\u7528\uFF0C\u56E0\u4E3A <code>add</code> \u5C06\u59CB\u7EC8\u8FD4\u56DE <code>BasicCalculator</code>, \u800C <code>BasicCalculator</code> \u6CA1\u6709 <code>sin</code> \u65B9\u6CD5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">BasicCalculator</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">protected</span> value<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
  <span class="token function">currentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value
  <span class="token punctuation">}</span>
  <span class="token function">add</span><span class="token punctuation">(</span>operand<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> BasicCalculator <span class="token punctuation">{</span> <span class="token comment">// \u8FD4\u56DE BasicCalculator</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">+=</span> operand
    <span class="token keyword">return</span> <span class="token keyword">this</span>
  <span class="token punctuation">}</span>
  <span class="token function">multiply</span><span class="token punctuation">(</span>operand<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> BasicCalculator <span class="token punctuation">{</span> <span class="token comment">// \u8FD4\u56DE BasicCalculator</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">*=</span> operand
    <span class="token keyword">return</span> <span class="token keyword">this</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">ScientificCalculator</span> <span class="token keyword">extends</span> <span class="token class-name">BasicCalculator</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">sin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span> <span class="token punctuation">{</span> <span class="token comment">// \u8FD4\u56DE polymorphic this \u7C7B\u578B</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">new</span> <span class="token class-name">ScientificCalculator</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// error, Property &#39;sin&#39; dose not exist on type &#39;BasicCalculator&#39;</span>
</code></pre></div><h3 id="index-types" tabindex="-1">Index types <a class="header-anchor" href="#index-types" aria-hidden="true">#</a></h3><p>\u5229\u7528\u7D22\u5F15\u7C7B\u578B\uFF0C\u7F16\u8BD1\u5668\u53EF\u4EE5\u68C0\u67E5\u4F7F\u7528\u52A8\u6001\u5C5E\u6027\u540D\u7684\u4EE3\u7801\uFF0C\u4F8B\u5982 JavaScript \u4E2D\u5F88\u5E38\u89C1\u7684\u4EE3\u7801\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">pluck</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> names<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> names<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>n <span class="token operator">=&gt;</span> o<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728 TypeScript \u4E2D\u5229\u7528\u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2(index type query)\u548C\u7D22\u5F15\u8BBF\u95EE\u64CD\u4F5C\u7B26(indexed access operator)\uFF0C\u53EF\u4EE5\u8FD9\u6837\u5199\u8FD9\u4E2A\u51FD\u6570\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">pluck</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> names<span class="token operator">:</span> k<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> names<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>n <span class="token operator">=&gt;</span> o<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;Nicholas&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">34</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> subset1 <span class="token operator">=</span> <span class="token function">pluck</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
<span class="token keyword">let</span> subset2 <span class="token operator">=</span> <span class="token function">pluck</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
<span class="token keyword">let</span> subset3 <span class="token operator">=</span> <span class="token function">pluck</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// error</span>
</code></pre></div><p>\u8FD9\u6837 TypeScript \u5C31\u53EF\u4EE5\u52A0\u5165\u7C7B\u578B\u68C0\u67E5\uFF0C\u4F8B\u5982\u4E0A\u9762 <code>names</code> \u7684\u5143\u7D20\u5FC5\u987B\u662F <code>person</code> \u7684\u5C5E\u6027\uFF0C\u5426\u5219\u4E0D\u80FD\u901A\u8FC7\u7F16\u8BD1\u3002</p><p>\u4E0A\u9762\u4F7F\u7528\u7684\u5230\u7684\u64CD\u4F5C\u7B26 <code>keyof</code> \u79F0\u4F5C\u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2\u64CD\u4F5C\u7B26(index type query operator)\uFF0C\u5BF9\u4E8E\u4EFB\u610F\u7C7B\u578B <code>T</code>\uFF0C<code>keyof T</code> \u4EE3\u8868\u7684\u662F <code>T</code> \u7684\u6240\u6709\u516C\u6709\u5C5E\u6027\u540D\u7684\u8054\u5408\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
  gender<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Book</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>
    <span class="token keyword">public</span> author<span class="token operator">:</span> Person<span class="token punctuation">,</span>
    <span class="token keyword">public</span> title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    <span class="token keyword">public</span> price<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    <span class="token keyword">private</span> publisher<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">personProps</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Person <span class="token comment">// &quot;name&quot; | &quot;age&quot; | &quot;gender&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">bookProps</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Book <span class="token comment">// &quot;author&quot; | &quot;title&quot; | &quot;price&quot;\uFF0C\u4E0D\u5305\u542B &quot;publisher&quot;</span>
</code></pre></div><p>\u7B2C\u4E8C\u4E2A\u7528\u5230\u7684\u64CD\u4F5C\u7B26\u662F <code>T[K]</code>\uFF0C\u5373\u7D22\u5F15\u8BBF\u95EE\u64CD\u4F5C\u7B26(indexed access operator)\uFF0C\u8FD9\u91CC\u7C7B\u578B\u8BED\u6CD5\u4E5F\u53CD\u6620\u4E86\u8868\u8FBE\u5F0F\u8BED\u6CD5\uFF0C\u5373 <code>person[&quot;name&quot;]</code> \u5177\u6709 <code>Person[&quot;name&quot;]</code> \u7C7B\u578B\uFF0C\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\u5C31\u662F <code>string</code> \u7C7B\u578B\uFF0C\u7136\u800C\u5728\u6CDB\u578B\u4E0A\u4E0B\u6587\u91CC\uFF0C<code>T[K]</code> \u7684\u7C7B\u578B\u662F\u6839\u636E <code>T</code> \u548C <code>K</code> \u7684\u7C7B\u578B\u52A8\u6001\u786E\u5B9A\u7684\uFF0C\u8FD9\u6B63\u662F\u5B83\u7684\u5F3A\u5927\u4E4B\u5904\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getProperty</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> o<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token comment">// o[name] \u7684\u7C7B\u578B\u4E3A T[K]</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token function">getProperty</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// string</span>
<span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token function">getProperty</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span> <span class="token comment">// number</span>
</code></pre></div><h3 id="mapped-types" tabindex="-1">Mapped types <a class="header-anchor" href="#mapped-types" aria-hidden="true">#</a></h3><p>\u8FD9\u4E2A\u7C7B\u578B\u592A\u9AD8\u7EA7\uFF0C\u8BE6\u60C5\u8BF7\u770B<a href="http://www.typescriptlang.org/docs/handbook/advanced-types.html" target="_blank" rel="noopener noreferrer">\u5B98\u65B9\u6587\u6863</a>\u3002</p><h3 id="conditional-types" tabindex="-1">Conditional Types <a class="header-anchor" href="#conditional-types" aria-hidden="true">#</a></h3><p>TypeScript 2.8 \u7248\u672C\u5F15\u5165\u4E86\u6761\u4EF6\u7C7B\u578B\uFF0C\u5F62\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-ts"><pre><code><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">X</span> <span class="token operator">:</span> <span class="token constant">Y</span>
</code></pre></div><p>\u610F\u601D\u662F\uFF0C\u5982\u679C <code>T</code> \u53EF\u8D4B\u7ED9 <code>U</code>\uFF0C\u7ED3\u679C\u7C7B\u578B\u4E3A <code>X</code>\uFF0C\u5426\u8005\u4E3A <code>Y</code>\u3002</p><p>\u4E00\u4E2A\u6761\u4EF6\u7C7B\u578B <code>T extends U ? X : Y</code> \u8981\u4E48\u88AB\u89E3\u6790\u4E3A <code>X</code> \u6216 <code>Y</code>\uFF0C\u8981\u4E48\u88AB\u5EF6\u8FDF\u89E3\u6790\uFF0C\u5F53\u6761\u4EF6\u5224\u65AD\u4F9D\u8D56\u4E8E\u4E00\u4E2A\u6216\u591A\u4E2A\u7C7B\u578B\u53C2\u6570\u65F6\u5C31\u4F1A\u51FA\u73B0\u5EF6\u8FDF\u89E3\u6790\u3002\u662F\u5426\u89E3\u6790\u4E3A <code>X</code> \u6216 <code>Y</code>, \u6216\u63A8\u8FDF\u89E3\u6790\uFF0C\u53D6\u51B3\u4E8E\u7C7B\u578B\u7CFB\u7EDF\u662F\u5426\u6709\u8DB3\u591F\u7684\u4FE1\u606F\u53BB\u63A8\u65AD\u51FA <code>T</code> \u662F\u5426\u603B\u662F\u53EF\u4EE5\u8D4B\u7ED9 <code>U</code>.</p><p>\u8BE6\u60C5\u8BF7\u770B<a href="http://www.typescriptlang.org/docs/handbook/advanced-types.html" target="_blank" rel="noopener noreferrer">\u5B98\u65B9\u6587\u6863</a></p><p>2.8 \u7248\u672C\u9884\u5B9A\u4E49\u4E86\u51E0\u4E2A\u6761\u4EF6\u7C7B\u578B\uFF1A</p><ul><li><code>Exclude&lt;T, U&gt;</code>\uFF1AExclude from <code>T</code> those types that are assignable to <code>U</code></li><li><code>Extract&lt;T, U&gt;</code>\uFF1AExtract from <code>T</code> those types that are assignable to <code>U</code></li><li><code>NonNullable&lt;T&gt;</code>\uFF1AExclude <code>null</code> and <code>undefined</code> from <code>T</code></li><li><code>ReturnType&lt;T&gt;</code>\uFF1AObtain the return type of a function type</li><li><code>InstanceType&lt;T&gt;</code>\uFF1AObtain the instance type of a constructor function type</li></ul><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T00</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;b&quot; | &quot;d&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T01</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | &quot;c&quot;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T02</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T03</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// () =&gt; void</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T04</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T05</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// (() =&gt; string) | string[]</span>

<span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span> s <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T10</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T11</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// void</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T12</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// {}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T13</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span><span class="token punctuation">,</span> <span class="token constant">U</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// number[]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T14</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> f1<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// { a: number, b: string }</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T15</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T16</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// never</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T17</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T18</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T20</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> <span class="token constant">C</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// C</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T21</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T22</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// never</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T23</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T24</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
</code></pre></div><h2 id="modules" tabindex="-1">Modules <a class="header-anchor" href="#modules" aria-hidden="true">#</a></h2><p>TypeScript \u7EE7\u627F\u4E86 ES6 \u4E2D modules \u7684\u6982\u5FF5\uFF0Cmodules \u5728\u5B83\u81EA\u5DF1\u7684\u4F5C\u7528\u57DF\u5185\u88AB\u6267\u884C\uFF0C\u800C\u4E0D\u662F\u5728\u5168\u5C40\u4F5C\u7528\u57DF\u3002 \u5728\u4E00\u4E2A module \u4E2D\u58F0\u660E\u7684\u53D8\u91CF\u3001\u51FD\u6570\u3001\u7C7B\u7B49\u7B49\u5728\u5176\u5B83 modules \u4E2D\u662F\u4E0D\u53EF\u89C1\u7684\uFF0C\u9664\u975E\u663E\u5F0F\u7684\u5C06\u8FD9\u4E9B\u53D8\u91CF\u5BFC\u51FA\u3002\u800C\u8981\u5728\u4E00\u4E2Amodule \u4E2D\u4F7F\u7528\u5176\u5B83 modules \u5BFC\u51FA\u7684\u53D8\u91CF\uFF0C\u5FC5\u987B\u5148\u5C06\u8FD9\u4E9B\u53D8\u91CF\u5BFC\u5165\u3002</p><p>\u4EFB\u4F55\u5305\u542B top-level <code>import</code> \u6216 <code>export</code> \u7684\u6587\u4EF6\u90FD\u88AB\u89C6\u4E3A module\uFF0C\u800C\u4E0D\u5305\u542B top-level <code>import</code> \u6216 <code>export</code> \u7684\u6587\u4EF6\u88AB\u89C6\u4E3A\u666E\u901A\u811A\u672C\uFF0C\u5B83\u91CC\u9762\u7684\u5185\u5BB9\u66B4\u9732\u5728\u5168\u5C40\u4F5C\u7528\u57DF\u5185\u3002</p><h3 id="export" tabindex="-1">Export <a class="header-anchor" href="#export" aria-hidden="true">#</a></h3><h4 id="exporting-a-declaration" tabindex="-1">Exporting a declaration <a class="header-anchor" href="#exporting-a-declaration" aria-hidden="true">#</a></h4><p>\u4F7F\u7528\u5173\u952E\u5B57 <code>export</code> \u53EF\u4EE5\u5BFC\u51FA\u4EFB\u4F55\u58F0\u660E\uFF0C\u4F8B\u5982 variable, function, class, interface, type alias, enum \u7B49\u7B49\uFF1A</p><p><em>module.ts</em></p><div class="language-ts"><pre><code><span class="token comment">// \u5BFC\u51FA interface</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
  <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5BFC\u51FA variable</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> numberRegexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]+$</span><span class="token regex-delimiter">/</span></span>
<span class="token comment">// \u5BFC\u51FA class</span>
<span class="token class-name"><span class="token keyword">export</span></span> <span class="token keyword">class</span> <span class="token class-name">ZipCodeValidator</span> <span class="token keyword">implements</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
  <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> numberRegexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p><em>module.ts</em> \u4E5F\u53EF\u4EE5\u6539\u5199\u4E3A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
  <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> numberRegexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]+$</span><span class="token regex-delimiter">/</span></span>

<span class="token keyword">class</span> <span class="token class-name">ZipCodeValidator</span> <span class="token keyword">implements</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
  <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> numberRegexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6309\u539F\u540D\u5BFC\u51FA</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> StringValidator<span class="token punctuation">,</span> numberRegexp <span class="token punctuation">}</span>
<span class="token comment">// \u6309\u522B\u540D validatorAlias \u5BFC\u51FA</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> ZipCodeValidator <span class="token keyword">as</span> validatorAlias <span class="token punctuation">}</span>
</code></pre></div><h4 id="re-exports" tabindex="-1">Re-exports <a class="header-anchor" href="#re-exports" aria-hidden="true">#</a></h4><p>\u5982\u679C\u4E00\u4E2A\u6A21\u5757\u8981\u6269\u5C55\u53E6\u4E00\u4E2A\u6A21\u5757\uFF0C\u5E76\u66B4\u9732\u5B83\u7684\u4E00\u90E8\u5206\u529F\u80FD\uFF0C\u53EF\u4EE5\u4F7F\u7528 re-export \u8BED\u6CD5\uFF1A</p><p><em>extended-module.ts</em></p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ParseIntBasedZipCodeValidator</span> <span class="token punctuation">{</span>
  <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> s
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4EE5\u522B\u540D\u7684\u65B9\u5F0F\u91CD\u65B0\u5BFC\u51FA ZipCodeValidator</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> ZipCodeValidator <span class="token keyword">as</span> RegExpBasedZipCodeValidator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./module&#39;</span>
<span class="token comment">// re-export \u6574\u4E2A module</span>
<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;./module&#39;</span>
</code></pre></div><p>re-export \u4E0D\u4F1A\u5C06 original module \u5BFC\u5165\u5230\u5F53\u524D module \u7684\u4F5C\u7528\u57DF\uFF0C\u4E5F\u4E0D\u4F1A\u5F15\u5165\u4E00\u4E2A\u672C\u5730\u53D8\u91CF\u3002</p><h3 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-hidden="true">#</a></h3><p><em>another-module.ts</em></p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> StringValidator<span class="token punctuation">,</span> numberRegexp<span class="token punctuation">,</span> ZipCodeValidator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./module&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> myValidator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipCodeValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5BFC\u5165\u53D8\u91CF\u65F6\u4E5F\u53EF\u4EE5\u91CD\u547D\u540D\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ZipCodeValidator <span class="token keyword">as</span> ZipCodeAlias <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./module&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> myValidator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipCodeAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5C06\u6574\u4E2A module \u4F5C\u4E3A\u4E00\u4E2A\u53D8\u91CF\u5BFC\u5165\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Validator <span class="token keyword">from</span> <span class="token string">&#39;./module&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> myValidator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Validator</span><span class="token punctuation">.</span><span class="token function">ZipCodeValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">NewValidator</span> <span class="token keyword">implements</span> <span class="token class-name">Validator</span><span class="token punctuation">.</span>StringValidator <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="default-exports" tabindex="-1">Default exports <a class="header-anchor" href="#default-exports" aria-hidden="true">#</a></h3><p>\u6BCF\u4E2A module \u53EF\u4EE5\u6709\u4E00\u4E2A <code>default</code> \u5BFC\u51FA\uFF0C\u800C\u4E14\u53EA\u80FD\u6709\u4E00\u4E2A</p><p><em>default-export-module.ts</em></p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">ParseIntBasedZipCodeValidator</span> <span class="token punctuation">{</span>
  <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> s
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F7F\u7528 <code>export default</code> \u5BFC\u51FA\u7684\u6A21\u5757\uFF0C\u5BFC\u5165\u7684\u65B9\u5F0F\u4E5F\u6709\u6240\u4E0D\u540C\uFF1A <em>import-default-module.ts</em></p><div class="language-ts"><pre><code><span class="token keyword">import</span> Validator <span class="token keyword">from</span> <span class="token string">&#39;./default-export-module&#39;</span>

<span class="token keyword">let</span> myValidator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Validator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p><code>default</code> \u5BFC\u51FA\u53EF\u4EE5\u5BFC\u51FA anonymous function\uFF1A <em>anonymous.ts</em></p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>length <span class="token punctuation">}</span>
</code></pre></div><p><em>test.ts</em></p><div class="language-ts"><pre><code><span class="token keyword">import</span> myFunc <span class="token keyword">from</span> <span class="token string">&#39;./anonymous&#39;</span>

<span class="token keyword">let</span> len <span class="token operator">=</span> <span class="token function">myFunc</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 5</span>
</code></pre></div><p>\u751A\u81F3\u53EF\u4EE5\u5BFC\u51FA\u5B57\u9762\u5E38\u91CF\uFF1A <em>OneTwoThree.ts</em></p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token string">&#39;123&#39;</span>
</code></pre></div><p><em>log.ts</em></p><div class="language-ts"><pre><code><span class="token keyword">import</span> num <span class="token keyword">from</span> <span class="token string">&#39;./OneTwoThree&#39;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token comment">// &#39;123&#39;</span>
</code></pre></div><h3 id="export-and-import-require" tabindex="-1"><code>export =</code> and <code>import = require()</code> <a class="header-anchor" href="#export-and-import-require" aria-hidden="true">#</a></h3><p>TypeScript \u652F\u6301\u6A21\u62DF\u4F20\u7EDF CommonJS \u548C AMD \u7684\u5DE5\u4F5C\u6D41\u3002</p><p><code>export =</code> \u8BED\u6CD5\u7528\u4E8E\u5BFC\u51FA\u5355\u4E2A\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u662F\u4E00\u4E2A class\u3001interface\u3001namespace\u3001function\u3001enum\uFF1A</p><p><em>ZipCodeValidator.ts</em></p><div class="language-ts"><pre><code><span class="token keyword">let</span> numberRegexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]+$</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">class</span> <span class="token class-name">ZipCodeValidator</span> <span class="token punctuation">{</span>
  <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> numberRegexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token operator">=</span> ZipCodeValidator
</code></pre></div><p>\u5BF9\u4E8E\u4F7F\u7528 <code>export =</code> \u5BFC\u51FA\u7684\u6A21\u5757\uFF0C\u5FC5\u987B\u4F7F\u7528 <code>import module = require(&#39;module&#39;)</code> \u8BED\u6CD5\u5BFC\u5165\uFF1A</p><p><em>Test.ts</em></p><div class="language-ts"><pre><code><span class="token keyword">import</span> zip <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span>&#39;<span class="token punctuation">.</span><span class="token operator">/</span>ZipCodeValidator<span class="token punctuation">)</span>

<span class="token comment">// Some samples to try</span>
<span class="token keyword">let</span> strings <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;98052&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;101&quot;</span><span class="token punctuation">]</span>

<span class="token comment">// Validators to use</span>
<span class="token keyword">let</span> validator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">zip</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// Show whether each string passed each validator</span>
strings<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>s <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> s <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> validator<span class="token punctuation">.</span><span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;matches&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;does not match&quot;</span> <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5173\u4E8E Module \u7684\u66F4\u591A\u5185\u5BB9\u53EF\u4EE5\u53C2\u8003<a href="https://basarat.gitbooks.io/typescript/content/docs/project/modules.html" target="_blank" rel="noopener noreferrer">\u8FD9\u91CC</a></p>`,385),e=[o];function c(l,u,k,r,i,d){return a(),s("div",null,e)}var g=n(t,[["render",c]]);export{y as __pageData,g as default};
